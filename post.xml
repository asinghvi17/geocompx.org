<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>geocompx</title>
<link>https://geocompx.org/post.html</link>
<atom:link href="https://geocompx.org/post.xml" rel="self" type="application/rss+xml"/>
<description>geocompx hosts free resources on reproducible geographic data analysis, modelling and visualization with open source software</description>
<generator>quarto-1.2.269</generator>
<lastBuildDate>Wed, 23 Feb 2022 23:00:00 GMT</lastBuildDate>
<item>
  <title>Automatic website with the Geocomputation with R solutions</title>
  <dc:creator>Jakub Nowosad</dc:creator>
  <link>https://geocompx.org/post/2022/geocompr-solutions/index.html</link>
  <description><![CDATA[ 



<p><a href="https://geocompr.robinlovelace.net/">Geocomputation with R</a> is a book on geographic data analysis, visualization, and modeling. Each chapter<sup>1</sup> ends with a set of exercises allowing the readers to test how well they understand each presented concepts and approaches. However, exercises are often not enough without their solutions, which provides a way to compare readers’ answers with an expected one. This leads to technical questions: how to provide solutions to the exercises without making the book too long, and to minimise duplication of words/effort (for the questions and answers)? Also, how to test, at the same time, if the solutions are still working?</p>
<p>For <a href="https://bookdown.org/robinlovelace/geocompr/">the first edition of the book</a> we added solutions as external set of <a href="https://geocompr.github.io/vignettes/">vignettes</a>. This approach had, however, several flaws. Most importantly, solutions in the vignettes were detached from the exercises in the book, meaning that if we decided to change an exercise, we would need to go to a different repository and update it there as well. Additionally, the solution vignettes had a different style from the book and were harder to find. We decided to try a different approach for the second edition of the book. This time, we created an external bookdown-based website for solutions, which you can find at https://geocompr.github.io/solutions/. The main goal of this blog post is to explain the new setup in some detail.</p>
<section id="new-solutions-website" class="level2">
<h2 class="anchored" data-anchor-id="new-solutions-website">New solutions website</h2>
<p>Firstly, let’s take a look at the bigger picture. Exercises are shown at the end of the book chapters, for example, exercises for chapter 6 can be seen at https://geocompr.robinlovelace.net/raster-vector.html#exercises-4. You may notice that this exercises section starts with a description of prerequisites, and then several questions are listed. However, what to do when I want to find solutions to these problems or compare my results with those provided by the book authors? Then, we can visit the corresponding chapter in the solution website at https://geocompr.github.io/solutions/raster-vector.html. Note that the solution website contains the same content as the exercises section, and extends it with the solution code, code results, and newly created figures.</p>
</section>
<section id="solutions" class="level2">
<h2 class="anchored" data-anchor-id="solutions">Solutions</h2>
<p>Next, let’s dive deeper to see how it works. We can look at the source code of the solution website first – https://github.com/geocompr/solutions, and solutions for chapter 6 are at https://github.com/geocompr/solutions/blob/main/06-raster-vector.Rmd. If you open the last link, you should see a code looking like that:</p>
<pre><code>```{r setup, echo=FALSE, results='hide'}
ex = tempfile(fileext = ".Rmd")
on.exit(unlink(ex))
download.file("https://raw.githubusercontent.com/Robinlovelace/geocompr/main/_06-ex.Rmd", ex)
```

```{r, echo=FALSE, results='asis'}
res = knitr::knit_child(ex, quiet = TRUE, options = list(include = TRUE))
cat(res, sep = '\n')
```</code></pre>
<p>What is going on here? In short, we have two code chunks. The first (hidden) code chunk downloads a <code>_06-ex.Rmd</code> file from the <code>Robinlovelace/geocompr</code> repository. Ok, but how does this <code>_06-ex.Rmd</code> document looks like? You can see its content at https://raw.githubusercontent.com/Robinlovelace/geocompr/main/_06-ex.Rmd. It is a mix of text (mainly exercises questions) and R code chunks. Note here that most code chunks do not have any code chunks options set, except the first one. We wanted the first code chunk to be visible on the main book and the solution websites, so we used <code>include = TRUE</code>.</p>
<p>The second code chunk takes the downloaded document and knits it with a new global option, <code>include = TRUE</code>. This option make sure that we will show all possible outputs from <code>_06-ex.Rmd</code>, including numerical results and plots.</p>
</section>
<section id="exercises" class="level2">
<h2 class="anchored" data-anchor-id="exercises">Exercises</h2>
<p>The above section explained how we could see exercises and solutions on the solution website. However, how is it possible that we can only see the exercise text in the book? Let’s look at the bottom of the source code of the 6th chapter at https://github.com/Robinlovelace/geocompr/blob/main/06-raster-vector.Rmd:</p>
<pre><code>## Exercises

```{r, echo=FALSE, results='asis'}
res = knitr::knit_child('_06-ex.Rmd', quiet = TRUE, options = list(include = FALSE, eval = FALSE))
cat(res, sep = '\n')
```
</code></pre>
<p>There is only one short code chunk – it knits the same document, <code>_06-ex.Rmd</code>, however using different global options, <code>include = FALSE, eval = FALSE</code>. This assures that the book’s readers would not see any solutions’ code chunks or their outputs.</p>
</section>
<section id="workflow" class="level2">
<h2 class="anchored" data-anchor-id="workflow">Workflow</h2>
<p>Now we know all of the pieces of the puzzle. The last step is to connect them together with GitHub Actions.</p>
<p>Our workflow is as follows:</p>
<ol type="1">
<li>We add/update/modify exercises and their solutions stored in a file per chapter, e.g., <code>_06-ex.Rmd</code></li>
<li>We push the changes to the main book repository on GitHub (<code>Robinlovelace/geocompr</code>)</li>
<li>The book is automatically built using a <a href="https://github.com/Robinlovelace/geocompr/actions/workflows/main.yaml">GitHub Actions workflow</a>, including exercises (but not solutions!)</li>
<li>Once a week, another <a href="https://github.com/geocompr/solutions/actions/workflows/main.yaml">GitHub Actions workflow</a> runs in the solutions repository.</li>
</ol>
<p>This approach ensures that the solutions are always up-to-date, reproducible, and in sync. with the manuscript. It creates a resources dedicated to the exercises and their solutions, helping people learn. It should also encourage others to get involved: can you think of another exercise or an alternative solution to existing exercises? You have all the info you need to contribute now. Let us know your comments or suggestions at https://github.com/geocompr/solutions! Pull Requests are also welcome!</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Except the last one.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{nowosad2022,
  author = {Jakub Nowosad},
  title = {Automatic Website for the {Geocomputation} with {R}
    Solutions},
  date = {2022-02-24},
  url = {https://geocompx.org//post/2022/geocompr-solutions},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-nowosad2022" class="csl-entry quarto-appendix-citeas">
Jakub Nowosad. 2022. <span>“Automatic Website for the Geocomputation
with R Solutions.”</span> February 24, 2022. <a href="https://geocompx.org//post/2022/geocompr-solutions">https://geocompx.org//post/2022/geocompr-solutions</a>.
</div></div></section></div> ]]></description>
  <category>vignette</category>
  <category>rstats</category>
  <guid>https://geocompx.org/post/2022/geocompr-solutions/index.html</guid>
  <pubDate>Wed, 23 Feb 2022 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Progress update: Geocomputation with R Second Edition Part 1</title>
  <dc:creator>Jakub Nowosad, Robin Lovelace, Jannes Muenchow</dc:creator>
  <link>https://geocompx.org/post/2022/geocompr2-bp2/index.html</link>
  <description><![CDATA[ 



<p>Geocomputation with R is a book on geographic data analysis, visualization, and modeling. The First Edition was first published as a physical book in 2019 and we have reached 500k people through via the website at https://geocompr.robinlovelace.net/ and <a href="https://www.routledge.com/9781138304512">the physical book</a> since then.</p>
<p>The book has also become a key part of many university courses, lectures, and has been endorsed by many people who have found it vital for their work and for learning new geographic skills, as outlined in our <a href="https://geocompr.github.io/guestbook/">guestbook at geocompr.github.io/guestbook/</a>. Tools and methods for geographic data analysis are evolving quickly, especially in the R-Spatial ecosystem. Because of these changes, and demand from our readers and the wider community, we decided in September 2021 to start working on the second edition of the book. The second edition (work in progress) is available at https://geocompr.robinlovelace.net/, while you can find the first edition at https://bookdown.org/robinlovelace/geocompr/.</p>
<p>At the time of writing (January 2022), we have already made many changes to first part of the book called <em>Foundations</em>. In this post we list and explain the changes.</p>
<section id="major-changes" class="level2">
<h2 class="anchored" data-anchor-id="major-changes">Major changes</h2>
<p>Several major changes have happened to #rspatial since the release of the first version of the book. Most importantly:<sup>1</sup></p>
<ul>
<li>PROJ library was refactored mainly, which have had an impact on a plethora of GIS software, including R spatial packages</li>
<li>The <strong>raster</strong> package, highlighted in the 1st edition, is now being replaced by its successor <strong>terra</strong></li>
</ul>
<p><img src="https://geocompx.org/post/2022/geocompr2-bp2/ch2fig.png" class="img-fluid"></p>
<p>Both of these changes are now addressed in Geocomputation with R. Chapter <a href="https://geocompr.robinlovelace.net/reproj-geo-data.html">“Reprojecting geographic data”</a> has undergone numerous modifications, including an explanation of the currently recommended WKT coordinate reference systems representation, information on how to get and set CRSs, or a much-improved section on creating custom projections. Similarly, we already replaced <strong>raster</strong>’s descriptions and functions with <strong>terra</strong> in the book’s first eight chapters.</p>
</section>
<section id="changes-to-specific-chapters" class="level2">
<h2 class="anchored" data-anchor-id="changes-to-specific-chapters">Changes to specific chapters</h2>
<p>Additionally, almost all chapters received significant edits. Section <a href="https://geocompr.robinlovelace.net/intro.html#the-history-of-r-spatial">The history of R-spatial</a> in 1st chapter was updated with summary of various new #rspatial developments, including <strong>terra</strong>, <strong>stars</strong>, <strong>lidR</strong>, <strong>rayshader</strong>, <strong>ggspatial</strong>, <strong>mapsf</strong>, etc. We also used this section to highlight that packages <a href="https://stat.ethz.ch/pipermail/r-sig-geo/2021-September/028760.html"><strong>rgdal</strong>, <strong>rgeos</strong>, and <strong>maptools</strong> will be retired at the end of 2023</a> and that anyone still using these packages should “<strong>transition to sf/stars/terra functions using GDAL and PROJ at your earliest convenience</strong>”.”</p>
<p>Second chapter got an information about <strong>s2</strong>, an interface to spherical geometry library already used by the <strong>sf</strong> package, and a <a href="https://geocompr.robinlovelace.net/spatial-class.html#r-packages-for-working-with-raster-data">comparison between <strong>terra</strong> and <strong>stars</strong></a>.</p>
<p>In Chapter 4, we added <a href="https://geocompr.robinlovelace.net/spatial-operations.html#topological-relations">improved communication of binary spatial predicates in Chapter 4</a> and a new <a href="https://geocompr.robinlovelace.net/spatial-operations.html#de-9im-strings">section</a> on the dimensionally extended 9 intersection model (DE-9IM).</p>
<p><img src="https://geocompx.org/post/2022/geocompr2-bp2/ch4fig.png" class="img-fluid"></p>
<p>The vector part of Chapter 5 received <a href="https://geocompr.robinlovelace.net/geometric-operations.html#subsetting-and-clipping">a new section on the links between subsetting and clipping</a>, while the raster part got a much improved <a href="https://geocompr.robinlovelace.net/geometric-operations.html#resampling">part on resampling methods</a>. We also decided to split out the text related raster-vector interactions into <a href="https://geocompr.robinlovelace.net/raster-vector.html">a new 6th chapter</a>.</p>
<p>Finally, <a href="https://geocompr.robinlovelace.net/read-write.html#read-write">Chapter 8</a> got a bunch of improvements, including mentions of more data packages, alternative ways of reading-in OSM data, a part about geocoding, and information about Cloud Optimized GeoTIFF (COG). We also spent some time to show how to <a href="https://geocompr.robinlovelace.net/read-write.html#iovec">read just a part of vector data file using OGR SQL queries and WKT filters</a>, and <a href="https://geocompr.robinlovelace.net/read-write.html#raster-data-read">extract only a portion of a COG raster file</a>.</p>
<p><img src="https://geocompx.org/post/2022/geocompr2-bp2/ch8fig.png" class="img-fluid"></p>
</section>
<section id="book-infrastructure" class="level2">
<h2 class="anchored" data-anchor-id="book-infrastructure">Book infrastructure</h2>
<p>We also decided that the 2nd edition is a good time to improve the book infrastructure, i.e., data packages, storage of the exercises and solutions, automatic book builds, etc.</p>
<p>The most visible change is the visual theme of the book website. Now it uses the Bootstrap 4 framework through the <code>bookdown::bs4_book</code> theme with slightly customized elements, such as font families or a text blocks style.</p>
<p>Next, we created an external bookdown-based website for solutions of the Geocomputation with R exercises. You can find its early version at https://geocompr.github.io/solutions/, and we plan to describe it in more detail in a future blog post.</p>
<p>The book still uses two external packages, <strong>spData</strong> and <strong>spDataLarge</strong>, to store example datasets. However, we made an important change here – we saved some R spatial objects to files (e.g., <strong>raster</strong> objects to GeoTIFF) – this way, we can read data using <strong>raster</strong>/<strong>terra</strong>/<strong>stars</strong>, instead of just loading one package’s class object into R memory.</p>
<p>We refactored build settings, so the book builds on Docker images in the <a href="https://github.com/geocompr/docker">geocompr/docker</a> repo, and improved the experience of using the book in Binder (ideal for trying out the code before installing or updating the necessary R packages), as documented in issue <a href="https://github.com/Robinlovelace/geocompr/issues/691">#691</a> (thanks to <a href="https://github.com/yuvipanda">yuvipanda</a>).</p>
</section>
<section id="minor-changes" class="level2">
<h2 class="anchored" data-anchor-id="minor-changes">Minor changes</h2>
<p>We reworked several plots using the <strong>tmap</strong> package to improve the visual consistency of the book.</p>
<p><img src="https://geocompx.org/post/2022/geocompr2-bp2/figtmap.png" class="img-fluid"></p>
<p>The book also received (almost) countless minor changes, including rephrasing many concepts and reordering of our prose to make some ideas easier to understand.</p>
</section>
<section id="outro" class="level2">
<h2 class="anchored" data-anchor-id="outro">Outro</h2>
<p>Our plan now is to switch attention to the second part of the book called Extensions, while Part 1 is sent for peer review. We will work on the enhanced Making maps chapter, updates on Bridges to GIS software and Statistical learning.</p>
<p>The work and updates on the second edition of Geocomputation with R would not be possible without the interest and activity of our readers! We want to thank all of you, including authors of recent Pull Requests (<em>ec-nebi</em>, <em>e-clin</em>, Oliver Leroy <em>defuneste</em>, Ivan Dubrovin <em>iod-ine</em>, Floris Vanderhaeghe <em>florisvdh</em>, Hasmukh K Mistry <em>hasukmistry</em>, John S. Erickson <em>olyerickson</em>) and people raising new GitHub issues. We are still actively working on the book, and thus – let us know if you have any <a href="https://github.com/Robinlovelace/geocompr/issues">issues or suggestions</a> and feel free to create any <a href="https://github.com/Robinlovelace/geocompr/pulls">Pull Request</a> from fixing typos, clarifying unclear sentences, to changes to the code and prose. You can also contact us on <a href="https://discord.gg/Te3gWeDwmf">the Geocomputation with R discord channel</a>.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>There are also other significant changes, such as the retirement of <strong>RQGIS</strong> and <strong>mlr</strong>, but we plan to focus on them while updating the second part of the book.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{nowosad,robinlovelace,jannesmuenchow2022,
  author = {Jakub Nowosad, Robin Lovelace, Jannes Muenchow},
  title = {Progress Update: {Geocomputation} with {R} {Second} {Edition}
    {Part} 1},
  date = {2022-01-27},
  url = {https://geocompx.org//post/2022/geocompr2-bp2},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-nowosad,robinlovelace,jannesmuenchow2022" class="csl-entry quarto-appendix-citeas">
Jakub Nowosad, Robin Lovelace, Jannes Muenchow. 2022. <span>“Progress
Update: Geocomputation with R Second Edition Part 1.”</span> January 27,
2022. <a href="https://geocompx.org//post/2022/geocompr2-bp2">https://geocompx.org//post/2022/geocompr2-bp2</a>.
</div></div></section></div> ]]></description>
  <category>updates</category>
  <category>rstats</category>
  <guid>https://geocompx.org/post/2022/geocompr2-bp2/index.html</guid>
  <pubDate>Wed, 26 Jan 2022 23:00:00 GMT</pubDate>
  <media:content url="https://geocompx.org/post/2022/geocompr2-bp2/ch2fig.png" medium="image" type="image/png" height="91" width="144"/>
</item>
<item>
  <title>Geocomputation with R: Second Edition feedback</title>
  <dc:creator>Robin Lovelace, Jakub Nowosad, Jannes Muenchow</dc:creator>
  <link>https://geocompx.org/post/2021/geocompr2-bp1/index.html</link>
  <description><![CDATA[ 



<p>TL;DR: Please help us by filling out the survey at https://forms.gle/nq9RmbxJyZXQgc948.</p>
<p>It’s been almost 3 years since the first edition of Geocomputation with R was published back in 2019. It’s been an amazing journey for this open source book on geographic data analysis, visualization and modeling since then. We have reached almost 500k people via the website at https://geocompr.robinlovelace.net/ and the physical book. The book now contributes to many university courses, lectures, and personal development as outlined at https://geocompr.github.io/guestbook/ - where you can add you own comments.</p>
<p>Building on the success of the first edition, and motivated by the need for the material to adapt as spatial ecosystem evolves, we have decided that it is time for a Second Edition. We plan to start work on it over the next few months, aiming for publication around summer 2022. Second edition will be available at https://geocompr.robinlovelace.net/, while you can find the first edition at https://bookdown.org/robinlovelace/geocompr/.</p>
<p>We already have plenty of changes, updates, and improvements in mind, as documented in the book’s issue tracker. However, we want to get feedback from the community, to ensure we’re not miss something key and to find out what you most want from a 2nd edition. <strong>We’re asking for your help in guiding the future of Geocomputation with R!</strong></p>
<p>The book is already much stronger thanks to community, with 50+ people contributing to the codebase already and many more supporting in the issue tracker and the guestbook. <strong>Please take a few minutes to let us know your thoughts on the current edition, and suggestions for the next one using <a href="https://forms.gle/nq9RmbxJyZXQgc948">the Google form</a>.</strong></p>
<p>Thanks from the Geocomputation with R team,</p>
<p>Robin Lovelace, Jakub Nowosad, and Jannes Muenchow</p>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{lovelace,jakubnowosad,jannesmuenchow2021,
  author = {Robin Lovelace, Jakub Nowosad, Jannes Muenchow},
  title = {Geocomputation with {R:} {Second} {Edition} Feedback},
  date = {2021-09-06},
  url = {https://geocompx.org//post/2021/geocompr2-bp1},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-lovelace,jakubnowosad,jannesmuenchow2021" class="csl-entry quarto-appendix-citeas">
Robin Lovelace, Jakub Nowosad, Jannes Muenchow. 2021.
<span>“Geocomputation with R: Second Edition Feedback.”</span> September
6, 2021. <a href="https://geocompx.org//post/2021/geocompr2-bp1">https://geocompx.org//post/2021/geocompr2-bp1</a>.
</div></div></section></div> ]]></description>
  <category>announcement</category>
  <category>rstats</category>
  <guid>https://geocompx.org/post/2021/geocompr2-bp1/index.html</guid>
  <pubDate>Sun, 05 Sep 2021 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Conversions between different spatial classes in R</title>
  <dc:creator>Jakub Nowosad</dc:creator>
  <link>https://geocompx.org/post/2021/spatial-classes-conversion/index.html</link>
  <description><![CDATA[ 



<div class="cell">

</div>
<div class="cell">

</div>
<p>The R programming language has, over the past two decades, evolved substantial spatial data analysis capabilities, and is now one of the most powerful environments for undertaking geographic research using a reproducible command line interface. Currently, dedicated R packages allow to read spatial data and apply a plethora of different kinds of spatial methods in a reproducible fashion.</p>
<p>There are two main<sup>1</sup> spatial data models - spatial vector data and spatial raster data. Natively R does not support spatial data and does not have a definition of spatial classes. Therefore, there had been <a href="https://geocompr.robinlovelace.net/intro.html#the-history-of-r-spatial">a need to create R tools able to represent spatial vector and raster data</a>. Spatial classes are slightly different from regular R objects, such as data frames or matrices, as they need to not only store values, but also information about spatial locations and their <a href="https://geocompr.robinlovelace.net/spatial-class.html#crs-intro">coordinate reference systems</a>.</p>
<p>Nowadays, the most prominent packages to represent spatial vector data are <strong>sf</strong> <span class="citation" data-cites="R-sf">(Pebesma 2021a)</span> and its predecessor <strong>sp</strong> <span class="citation" data-cites="R-sp">(Pebesma and Bivand 2021)</span>, however, the <strong>terra</strong> <span class="citation" data-cites="R-terra">(Hijmans 2021b)</span> package also has its own spatial class for vector data. Spatial raster data can be stored as objects from <strong>terra</strong> <span class="citation" data-cites="R-terra">(Hijmans 2021b)</span> and its predecessor <strong>raster</strong> <span class="citation" data-cites="R-raster">(Hijmans 2021a)</span>, or alternatively the <strong>stars</strong> package <span class="citation" data-cites="R-stars">(Pebesma 2021b)</span>.</p>
<p>As you could see in <a href="../../../post/2020/whyr_webinar004/">our Why R? webinar talk</a>, the spatial capabilities of R constantly expand, but also evolve. New packages are being developed, while old ones are modified or superseded. In this process, new methods are created, higher performance code is added, and possible workflows are expanded. Alternative approaches allow for a (hopefully) healthy competition, resulting in better packages. Of course, having more than one package (with its own spatial class/es) for a vector or raster data model could be problematic, especially for new or inexperienced users.</p>
<p>First, it takes time to understand how different spatial classes are organized. To illustrate this, let’s read the same spatial data, <code>srtm.tif</code> from the <strong>spDataLarge</strong> package <span class="citation" data-cites="R-spDataLarge">(Nowosad and Lovelace 2021)</span>, using <strong>raster</strong> and <strong>stars</strong>. The <strong>raster</strong> object:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">raster_file_path <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">system.file</span>(<span class="st" style="color: #20794D;">"raster/srtm.tif"</span>, <span class="at" style="color: #657422;">package =</span> <span class="st" style="color: #20794D;">"spDataLarge"</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(raster)</span>
<span id="cb1-3">srtm_raster <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">raster</span>(raster_file_path)</span>
<span id="cb1-4">srtm_raster</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>class      : RasterLayer 
dimensions : 457, 465, 212505  (nrow, ncol, ncell)
resolution : 0.0008333333, 0.0008333333  (x, y)
extent     : -113.2396, -112.8521, 37.13208, 37.51292  (xmin, xmax, ymin, ymax)
crs        : +proj=longlat +datum=WGS84 +no_defs 
source     : srtm.tif 
names      : srtm 
values     : 1024, 2892  (min, max)</code></pre>
</div>
</div>
<p>The <strong>stars</strong> object:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(stars)</span>
<span id="cb3-2">srtm_stars <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">read_stars</span>(raster_file_path)</span>
<span id="cb3-3">srtm_stars</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>stars object with 2 dimensions and 1 attribute
attribute(s):
          Min. 1st Qu. Median     Mean 3rd Qu. Max.
srtm.tif  1024    1535   1837 1842.548    2114 2892
dimension(s):
  from  to  offset        delta refsys point x/y
x    1 465 -113.24  0.000833333 WGS 84 FALSE [x]
y    1 457 37.5129 -0.000833333 WGS 84 FALSE [y]</code></pre>
</div>
</div>
<p>Secondly, other packages with methods we want to use, could only accept one specific spatial class, but not the other. For example, the current version of the <strong>sabre</strong> package <span class="citation" data-cites="R-sabre">(Nowosad and Stepinski 2019)</span> (0.3.2) accepts objects from the <strong>raster</strong> package, but not ones from <strong>terra</strong> or <strong>stars</strong><sup>2</sup>. The <code>partitions1</code> and <code>partitions2</code> objects are of the <code>RasterLayer</code> class from <strong>raster</strong>, so the <code>vmeasure_calc()</code> function works correctly.</p>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">library</span>(sabre)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;">library</span>(raster)</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;">data</span>(<span class="st" style="color: #20794D;">"partitions1"</span>)</span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;">data</span>(<span class="st" style="color: #20794D;">"partitions2"</span>)</span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;">vmeasure_calc</span>(partitions1, partitions2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The SABRE results:

 V-measure: 0.36 
 Homogeneity: 0.32 
 Completeness: 0.42 

 The spatial objects can be retrieved with:
 $map1 - the first map
 $map2 - the second map </code></pre>
</div>
</div>
<p>However, when the input object (representing the same spatial data!) is of the <code>SpatRaster</code> class from <strong>terra</strong>, the calculation results in error.</p>
<pre><code>vmeasure_calc(partitions1_terra, partitions1_terra)</code></pre>
<pre><code>## Error in UseMethod("vmeasure_calc") : 
##  no applicable method for 'vmeasure_calc' applied to an object of class "SpatRaster"</code></pre>
<p>Some packages, such as <strong>tmap</strong> <span class="citation" data-cites="R-tmap">(Tennekes 2021)</span>, accept many R spatial classes, however, this takes a lot of effort from package creators to make it possible and to maintain it. Gladly, a number of functions exist that allow to convert between different R spatial classes. Using them, we can work with our favorite spatial data representation, switch to some other representation just for a certain calculation, and then convert the result back into our class. The next two sections showcase how to move between different spatial vector and raster data classes in R.</p>
<section id="spatial-vector-data" class="level2">
<h2 class="anchored" data-anchor-id="spatial-vector-data">Spatial vector data</h2>
<p>The <code>world.gpkg</code> file from the <strong>spData</strong> <span class="citation" data-cites="R-spData">(Bivand, Nowosad, and Lovelace 2020)</span> contains spatial vector data with world countries.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">world_path <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">system.file</span>(<span class="st" style="color: #20794D;">"shapes/world.gpkg"</span>, <span class="at" style="color: #657422;">package =</span> <span class="st" style="color: #20794D;">"spData"</span>)</span></code></pre></div>
</div>
<p>Now, we can read this file, for example, as an <code>sf</code> object, and convert it into other spatial vector data classes.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">library</span>(sf)</span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;">library</span>(sp)</span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;">library</span>(terra)</span>
<span id="cb10-4"></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;"># read as sf</span></span>
<span id="cb10-6">world <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">read_sf</span>(world_path)</span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;"># sf to sp</span></span>
<span id="cb10-9">world_sp1 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">as</span>(world, <span class="st" style="color: #20794D;">"Spatial"</span>)</span>
<span id="cb10-10"></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;"># sf to terra vect</span></span>
<span id="cb10-12">world_terra1 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">vect</span>(world)</span>
<span id="cb10-13"></span>
<span id="cb10-14"><span class="co" style="color: #5E5E5E;"># sp to terra vect</span></span>
<span id="cb10-15">world_terra2 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">vect</span>(world_sp1)</span>
<span id="cb10-16"></span>
<span id="cb10-17"><span class="co" style="color: #5E5E5E;"># sp to sf</span></span>
<span id="cb10-18">world_sf2 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_as_sf</span>(world_sp1)</span>
<span id="cb10-19"></span>
<span id="cb10-20"><span class="co" style="color: #5E5E5E;"># terra vect to sf</span></span>
<span id="cb10-21">world_sf3 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_as_sf</span>(world_terra1)</span>
<span id="cb10-22"></span>
<span id="cb10-23"><span class="co" style="color: #5E5E5E;"># terra vect to sp</span></span>
<span id="cb10-24">world_sp2 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">as</span>(world_terra1, <span class="st" style="color: #20794D;">"Spatial"</span>)</span></code></pre></div>
</div>
<p>In summary, <code>st_as_sf()</code> converts other classes into <code>sf</code>, <code>vect()</code> transform other classes into <strong>terra</strong>’s <code>SpatVector</code>, and with <code>as(x, "Spatial")</code> it is possible to get <strong>sp</strong>’s vectors.</p>
<div class="cell">
<div class="cell-output-display">

<table class="table" style="margin-left: auto; margin-right: auto;">
 <thead>
  <tr>
   <th style="text-align:left;"> FROM/TO </th>
   <th style="text-align:left;"> sf </th>
   <th style="text-align:left;"> sp </th>
   <th style="text-align:left;"> terra </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;border-right:1px solid;font-weight: bold;"> sf </td>
   <td style="text-align:left;border-right:1px solid;font-style: italic;">  </td>
   <td style="text-align:left;border-right:1px solid;font-style: italic;"> as(x, "Spatial") </td>
   <td style="text-align:left;font-style: italic;"> vect() </td>
  </tr>
  <tr>
   <td style="text-align:left;border-right:1px solid;font-weight: bold;"> sp </td>
   <td style="text-align:left;border-right:1px solid;font-style: italic;"> st_as_sf() </td>
   <td style="text-align:left;border-right:1px solid;font-style: italic;">  </td>
   <td style="text-align:left;font-style: italic;"> vect() </td>
  </tr>
  <tr>
   <td style="text-align:left;border-right:1px solid;font-weight: bold;"> terra </td>
   <td style="text-align:left;border-right:1px solid;font-style: italic;"> st_as_sf() </td>
   <td style="text-align:left;border-right:1px solid;font-style: italic;"> as(x, "Spatial") </td>
   <td style="text-align:left;font-style: italic;">  </td>
  </tr>
</tbody>
</table>

</div>
</div>
</section>
<section id="spatial-raster-data" class="level2">
<h2 class="anchored" data-anchor-id="spatial-raster-data">Spatial raster data</h2>
<p>The <code>srtm.tif</code> file from the <strong>spDataLarge</strong> <span class="citation" data-cites="R-spDataLarge">(Nowosad and Lovelace 2021)</span> contains a raster elevation model for the Zion National Park in the USA.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">srtm_path <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">system.file</span>(<span class="st" style="color: #20794D;">"raster/srtm.tif"</span>, <span class="at" style="color: #657422;">package =</span> <span class="st" style="color: #20794D;">"spDataLarge"</span>)</span></code></pre></div>
</div>
<p>Now, we can read this file, for example, as a <strong>raster</strong> object, and convert it into other spatial vector data classes.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;">library</span>(raster)</span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;">library</span>(stars)</span>
<span id="cb12-3"><span class="fu" style="color: #4758AB;">library</span>(terra)</span>
<span id="cb12-4"></span>
<span id="cb12-5">srtm_raster1 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">raster</span>(srtm_path)</span>
<span id="cb12-6"></span>
<span id="cb12-7"><span class="co" style="color: #5E5E5E;"># raster to terra</span></span>
<span id="cb12-8">srtm_terra1 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">rast</span>(srtm_raster1)</span>
<span id="cb12-9"></span>
<span id="cb12-10"><span class="co" style="color: #5E5E5E;"># terra to raster</span></span>
<span id="cb12-11">srtm_raster2 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">raster</span>(srtm_terra1)</span>
<span id="cb12-12"></span>
<span id="cb12-13"><span class="co" style="color: #5E5E5E;"># raster to stars</span></span>
<span id="cb12-14">srtm_stars1 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_as_stars</span>(srtm_raster1)</span>
<span id="cb12-15"></span>
<span id="cb12-16"><span class="co" style="color: #5E5E5E;"># stars to raster</span></span>
<span id="cb12-17">srtm_raster2 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">as</span>(srtm_stars1, <span class="st" style="color: #20794D;">"Raster"</span>)</span>
<span id="cb12-18"></span>
<span id="cb12-19"><span class="co" style="color: #5E5E5E;"># terra to stars</span></span>
<span id="cb12-20">srtm_stars2 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_as_stars</span>(srtm_terra1)</span>
<span id="cb12-21"></span>
<span id="cb12-22"><span class="co" style="color: #5E5E5E;"># stars to terra</span></span>
<span id="cb12-23">srtm_terra1a <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">as</span>(srtm_stars1, <span class="st" style="color: #20794D;">"SpatRaster"</span>)</span></code></pre></div>
</div>
<p>As you can see - in most cases, we can just use one function to move from one class to another.</p>
<div class="cell">
<div class="cell-output-display">

<table class="table" style="margin-left: auto; margin-right: auto;">
 <thead>
  <tr>
   <th style="text-align:left;"> FROM/TO </th>
   <th style="text-align:left;"> raster </th>
   <th style="text-align:left;"> terra </th>
   <th style="text-align:left;"> stars </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;border-right:1px solid;font-weight: bold;"> raster </td>
   <td style="text-align:left;border-right:1px solid;font-style: italic;">  </td>
   <td style="text-align:left;border-right:1px solid;font-style: italic;"> rast() </td>
   <td style="text-align:left;font-style: italic;"> st_as_stars() </td>
  </tr>
  <tr>
   <td style="text-align:left;border-right:1px solid;font-weight: bold;"> terra </td>
   <td style="text-align:left;border-right:1px solid;font-style: italic;"> raster() </td>
   <td style="text-align:left;border-right:1px solid;font-style: italic;">  </td>
   <td style="text-align:left;font-style: italic;"> st_as_stars() </td>
  </tr>
  <tr>
   <td style="text-align:left;border-right:1px solid;font-weight: bold;"> stars </td>
   <td style="text-align:left;border-right:1px solid;font-style: italic;"> raster() </td>
   <td style="text-align:left;border-right:1px solid;font-style: italic;"> as(x, "SpatRaster") </td>
   <td style="text-align:left;font-style: italic;">  </td>
  </tr>
</tbody>
</table>

</div>
</div>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>This blog post summarizes how to move between different R spatial vector and raster classes. All of the functions mentioned above have one role: to change classes of input objects. They do not, however, change geometries or underlining values in the data.</p>
<p>Additionally, switching from the spatial vector data model to the spatial raster data model (and vice versa) is also possible. These operations are known as rasterization and vectorization, and they could impact spatial and nonspatial information in the input data. To learn more about them, read <a href="https://geocompr.robinlovelace.net/geometric-operations.html#raster-vector">the Raster-Vector Interactions section</a> in <a href="https://geocompr.robinlovelace.net/">Geocomputation with R</a>.</p>
</section>
<section id="references" class="level2">




</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-R-spData" class="csl-entry">
Bivand, Roger, Jakub Nowosad, and Robin Lovelace. 2020. <em>spData: Datasets for Spatial Analysis</em>. <a href="https://nowosad.github.io/spData/">https://nowosad.github.io/spData/</a>.
</div>
<div id="ref-R-raster" class="csl-entry">
Hijmans, Robert J. 2021a. <em>Raster: Geographic Data Analysis and Modeling</em>. <a href="https://rspatial.org/raster">https://rspatial.org/raster</a>.
</div>
<div id="ref-R-terra" class="csl-entry">
———. 2021b. <em>Terra: Spatial Data Analysis</em>. <a href="https://rspatial.org/terra">https://rspatial.org/terra</a>.
</div>
<div id="ref-R-spDataLarge" class="csl-entry">
Nowosad, Jakub, and Robin Lovelace. 2021. <em>spDataLarge: Large Datasets for Spatial Analysis</em>. <a href="https://github.com/Nowosad/spData">https://github.com/Nowosad/spData</a>.
</div>
<div id="ref-R-sabre" class="csl-entry">
Nowosad, Jakub, and Tomasz Stepinski. 2019. <em>Sabre: Spatial Association Between Regionalizations</em>. <a href="https://nowosad.github.io/sabre/">https://nowosad.github.io/sabre/</a>.
</div>
<div id="ref-R-sf" class="csl-entry">
Pebesma, Edzer. 2021a. <em>Sf: Simple Features for r</em>.
</div>
<div id="ref-R-stars" class="csl-entry">
———. 2021b. <em>Stars: Spatiotemporal Arrays, Raster and Vector Data Cubes</em>.
</div>
<div id="ref-R-sp" class="csl-entry">
Pebesma, Edzer, and Roger Bivand. 2021. <em>Sp: Classes and Methods for Spatial Data</em>. <a href="https://CRAN.R-project.org/package=sp">https://CRAN.R-project.org/package=sp</a>.
</div>
<div id="ref-R-tmap" class="csl-entry">
Tennekes, Martijn. 2021. <em>Tmap: Thematic Maps</em>. <a href="https://github.com/mtennekes/tmap">https://github.com/mtennekes/tmap</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>There are also other spatial data models, including meshes or point clouds.↩︎</p></li>
<li id="fn2"><p>I plan to improve that in a future release.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{nowosad2021,
  author = {Jakub Nowosad},
  title = {Conversions Between Different Spatial Classes in {R}},
  date = {2021-06-17},
  url = {https://geocompx.org//post/2021/spatial-classes-conversion},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-nowosad2021" class="csl-entry quarto-appendix-citeas">
Jakub Nowosad. 2021. <span>“Conversions Between Different Spatial
Classes in R.”</span> June 17, 2021. <a href="https://geocompx.org//post/2021/spatial-classes-conversion">https://geocompx.org//post/2021/spatial-classes-conversion</a>.
</div></div></section></div> ]]></description>
  <category>vignette</category>
  <category>rstats</category>
  <guid>https://geocompx.org/post/2021/spatial-classes-conversion/index.html</guid>
  <pubDate>Wed, 16 Jun 2021 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Recent changes in R spatial and how to be ready for them</title>
  <dc:creator>Jakub Nowosad, Robin Lovelace</dc:creator>
  <link>https://geocompx.org/post/2020/recent-changes-in-r-spatial-and-how-to-be-ready-for-them/index.html</link>
  <description><![CDATA[ 



<p>Currently, hundreds of R packages are related to spatial data analysis. They range from ecology and earth observation, hydrology and soil science, to transportation and demography. These packages support various stages of analysis, including data preparation, visualization, modeling, or communicating the results. One common feature of most R spatial packages is that they are built upon some of the main representations of spatial data in R, available in key geographic R packages such as:</p>
<ul>
<li><strong>sf</strong>, which replaces <strong>sp</strong></li>
<li><strong>terra</strong>, which aims to replace <strong>raster</strong></li>
<li><strong>stars</strong></li>
</ul>
<p>Those packages are also not entirely independent. They are using external libraries, namely GEOS for spatial data operations, GDAL for reading and writing spatial data, and PROJ for conversions of spatial coordinates.</p>
<p>Therefore, R spatial packages are interwoven with each other and depend partially on external software developments. This has several positives, including the ability to use cutting-edge features and algorithms. On the other hand, it also makes R spatial packages vulnerable to changes in the upstream packages and libraries.</p>
<p>In the first part of the talk, we showcase several recent advances in R packages. It includes the largest recent change related to the developments in the PROJ library. We explain why the changes happened and how they impact R users. The second part focus on how to prepare for the changes, including computer set-up and running R spatial packages using Docker (briefly covered in a previous <a href="https://geocompr.github.io/post/2020/installing-r-spatial-ubuntu/">post</a> and outlined in the new <a href="https://github.com/geocompr/docker#geocomputation-with-r-in-docker">geocompr/docker</a> repo). We outline important considerations when setting-up operating systems for geographic R packages. To reduce set-up times you can use geographic R packages Docker, a flexible and scalable technology containerization technology. Docker can run on modern computers and on your browser via services such as Binder, greatly reducing set-up times. Discussing these set-up options, and questions of compatibility between geographic R packages and paradigms such as the tidyverse and data.table, ensure that after the talk everyone can empower themselves with open source software for geographic data analysis in a powerful and flexible statistical programming environment.</p>
<p>You can find the slides for the talk at https://nowosad.github.io/whyr_webinar004/.</p>
<div class="quarto-video ratio ratio-16x9"><iframe src="https://www.youtube.com/embed/Va0STgco7-4" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{nowosad,robinlovelace2020,
  author = {Jakub Nowosad, Robin Lovelace},
  title = {Recent Changes in {R} Spatial and How to Be Ready for Them},
  date = {2020-04-25},
  url = {https://geocompx.org//post/2020/recent-changes-in-r-spatial-and-how-to-be-ready-for-them},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-nowosad,robinlovelace2020" class="csl-entry quarto-appendix-citeas">
Jakub Nowosad, Robin Lovelace. 2020. <span>“Recent Changes in R Spatial
and How to Be Ready for Them.”</span> April 25, 2020. <a href="https://geocompx.org//post/2020/recent-changes-in-r-spatial-and-how-to-be-ready-for-them">https://geocompx.org//post/2020/recent-changes-in-r-spatial-and-how-to-be-ready-for-them</a>.
</div></div></section></div> ]]></description>
  <category>announcement</category>
  <category>rstats</category>
  <guid>https://geocompx.org/post/2020/recent-changes-in-r-spatial-and-how-to-be-ready-for-them/index.html</guid>
  <pubDate>Fri, 24 Apr 2020 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Demo of reproducible geographic data analysis: mapping Covid-19 data with R</title>
  <dc:creator>Robin Lovelace</dc:creator>
  <link>https://geocompx.org/post/2020/r-spatial-demo-covid-19/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>The coronavirus pandemic is a global phenomenon that will affect the lives of the majority of the world’s population for years to come. Impacts range from physical distancing measures <a href="https://en.wikipedia.org/wiki/Social_distancing#2019%E2%80%932020_coronavirus_pandemic">already affecting more than half of Earth’s population</a> and knock-on impacts such as <a href="https://www.esa.int/Applications/Observing_the_Earth/Copernicus/Sentinel-5P/Coronavirus_lockdown_leading_to_drop_in_pollution_across_Europe">changes in air quality</a> to potentially life threatening illness, with peer reviewed estimates of <a href="https://www.thelancet.com/pdfs/journals/laninf/PIIS1473-3099(20)30243-7.pdf">infection fatality rates</a> showing the disease disproportionately affects the elderly and people with underlying health conditions.</p>
<p>Like other global phenomena such as climate change, the impacts of the pandemic vary greatly by geographic location, with effective and early implementation of physical distancing measures and effective contact tracing associated with lower death rates, according to preliminary <a href="https://www.medrxiv.org/content/10.1101/2020.03.10.20033738v3">research</a>, as illustrated in the animation below (source: <a href="https://www.washingtonpost.com/graphics/2020/world/corona-simulator/">Washington Post</a>).</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.washingtonpost.com/graphics/2020/world/corona-simulator/"><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/https:/upload.wikimedia.org/wikipedia/commons/thumb/8/82/Katapult_importance_social_distancing.gif/350px-Katapult_importance_social_distancing.gif" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>This article demonstrates how to download and map open data on the evolving coronavirus pandemic, using reproducible R code. The aim is not to provide scientific analysis of the data, but to demonstrate how ‘open science’ enables public access to important international datasets. It also provides an opportunity to demonstrate how techniques taught in <a href="https://geocompr.robinlovelace.net/"><em>Geocomputation with R</em></a> can be applied to real-world datasets.</p>
<p>Before undertaking geographic analysis of ‘rate’ data, such as the number Covid-19 infections per unit area, it is worth acknowledging caveats at the outset. Simple graphics of complex phenomena can be misleading. This is well-illustrated in the figure below by <a href="https://github.com/willgeary">Will Geary</a>, which shows how the ecological fallacy can affect interpretations of geographical analysis of areal units such countries that we will be using in this research.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://github.com/willgeary/covid-nyc-dasymetric-map"><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/https:/raw.githubusercontent.com/willgeary/covid-nyc-dasymetric-map/master/assets/comparison_table_zip_hex_smoothed.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>The post is intended more as a taster of geographic visualisation in R than as a gateway to scientific analysis of Covid-19 data. See resources such as the <a href="https://2020.erum.io/covidr-contest/">eRum2020 CovidR</a> contest and <a href="https://towardsdatascience.com/top-5-r-resources-on-covid-19-coronavirus-1d4c8df6d85f">lists</a> of online <a href="https://github.com/HDRUK/covid-19">resources</a> for pointers on how to usefully contribute to data-driven efforts to tackle the crisis.</p>
</section>
<section id="set-up" class="level1">
<h1>Set-up</h1>
<p>To reproduce the results presented in this article you will need to have an R installation with up-to-date versions of the following packages installed and loaded. (See the <a href="https://github.com/geocompr/docker">geocompr/docker</a> repo and <a href="https://geocompr.github.io/post/2020/installing-r-spatial-ubuntu/">Installing R on Ubuntu</a> article for more on setting up your computer to work with R).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(sf)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Linking to GEOS 3.11.0, GDAL 3.5.2, PROJ 9.0.1; sf_use_s2() is TRUE</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(tmap)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span></code></pre></div>
</div>
</section>
<section id="getting-international-covid-19-data" class="level1">
<h1>Getting international Covid-19 data</h1>
<p>To get data on official Covid-19 statistics, we will use the <a href="https://github.com/covid19datahub/COVID19"><code>COVID19</code></a> R package.</p>
<p><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/https:/camo.githubusercontent.com/b627e2aa6edcee3ead77511a35d4e1a5e91aa07f/68747470733a2f2f73746f726167652e636f7669643139646174616875622e696f2f6c6f676f2e737667" width="20%" style="display: block; margin: auto;"></p>
<p>This package provides daily updated data on a variety of variables related to the coronavirus pandemic at national, regional and city levels. Install it as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"COVID19"</span>)</span></code></pre></div>
</div>
<p>After the package is installed, you can get up-to-date country-level data as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">d <span class="ot" style="color: #003B4F;">=</span> COVID19<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">covid19</span>()</span></code></pre></div>
</div>
<div class="cell">

</div>
<p>To minimise dependencies for reproducing the results in this article, we uploaded a copy of the data, which can be downloaded as follows (re-run the code above to get up-to-date data):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">d <span class="ot" style="color: #003B4F;">=</span> readr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"https://git.io/covid-19-2020-04-23"</span>)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;">class</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "spec_tbl_df" "tbl_df"      "tbl"         "data.frame" </code></pre>
</div>
</div>
<p>The previous code chunk read a .csv file from online and confirmed, we have loaded a data frame (we will see how to join this with geographic data in the next section). We can get a sense of the contents of the data as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">ncol</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 24</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">nrow</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 17572</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;">names</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] "id"             "date"           "deaths"         "confirmed"     
 [5] "tests"          "recovered"      "hosp"           "icu"           
 [9] "vent"           "driving"        "walking"        "transit"       
[13] "country"        "state"          "city"           "lat"           
[17] "lng"            "pop"            "pop_14"         "pop_15_64"     
[21] "pop_65"         "pop_age"        "pop_density"    "pop_death_rate"</code></pre>
</div>
</div>
</section>
<section id="getting-geographic-data" class="level1">
<h1>Getting geographic data</h1>
<p>We will use a dataset representing countries worldwide from the <code>rnaturalearth</code> package. Assuming you have the package installed you can get the geographic data as follows (see the subsequent code chunk if not):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">world_rnatural <span class="ot" style="color: #003B4F;">=</span> rnaturalearth<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">ne_download</span>(<span class="at" style="color: #657422;">returnclass =</span> <span class="st" style="color: #20794D;">"sf"</span>)</span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;"># names(world_iso) # variables available</span></span>
<span id="cb14-3">world_iso <span class="ot" style="color: #003B4F;">=</span> world_rnatural <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;">select</span>(NAME_LONG, ISO_A3_EH, POP_EST, GDP_MD_EST, CONTINENT)</span></code></pre></div>
</div>
<div class="cell">

</div>
<p>The result of the previous code block, an object representing the world and containing only variables of interest, was uploaded to GitHub and can be loaded from a GeoJSON file as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">world_iso <span class="ot" style="color: #003B4F;">=</span> sf<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">read_sf</span>(<span class="st" style="color: #20794D;">"https://git.io/JfICT"</span>) </span></code></pre></div>
</div>
<p>To see what’s in the <code>world_iso</code> object we can plot it, with the default setting in <code>sf</code> showing the geographic distribution of each variable:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;">plot</span>(world_iso)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="transforming-geographic-data" class="level1">
<h1>Transforming geographic data</h1>
<p>An issue with the result from a data visualisation perspective is that this unprojected visualisation distorts the world: countries such as Greenland at high latitudes appear bigger than the actually are. To overcome this issue we will project the object as follows (see Chapter <a href="https://geocompr.robinlovelace.net/reproj-geo-data.html">6</a> of Geocomputation with R and a recent article on the <a href="https://www.r-spatial.org/r/2020/03/17/wkt.html">r-spatial website</a> for more on coordinate systems):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">world_projected <span class="ot" style="color: #003B4F;">=</span> world_iso <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;">st_transform</span>(<span class="st" style="color: #20794D;">"+proj=moll"</span>)</span></code></pre></div>
</div>
<p>We can plot just the geometry of the updated object as follows, noting that the result is projected in a way that preserves the true area of countries (noting also that all projections introduce distortions):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">st_geometry</span>(world_projected))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="attribute-joins" class="level1">
<h1>Attribute joins</h1>
<p>As outlined in Chapter <a href="https://geocompr.robinlovelace.net/attr.html#vector-attribute-joining">3</a> of <em>Geocomputation with R</em>, attribute joins can be used to add additional variables to geographic data via a ‘key variable’ shared between the geographic and non-geographic objects. In this case the shared variables are <code>ISO_A3_EH</code> in the geographic object and <code>id</code> in the Covid-19 dataset <code>d</code>. We will be concise and call the dataset resulting from this join operation <code>w</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">w <span class="ot" style="color: #003B4F;">=</span> dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">left_join</span>(world_projected, d, <span class="at" style="color: #657422;">by =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"ISO_A3_EH"</span><span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"id"</span>))</span>
<span id="cb19-2"><span class="fu" style="color: #4758AB;">class</span>(w)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "sf"         "tbl_df"     "tbl"        "data.frame"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;">nrow</span>(w)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 14919</code></pre>
</div>
</div>
</section>
<section id="calculating-area" class="level1">
<h1>Calculating area</h1>
<p>The package <code>sf</code> provides a wide range of functions for calculating geographic variables such as object centroid, bounding boxes, lengths and, as demonstrated below, area. We use this area data to calculate the population density of each country as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">w<span class="sc" style="color: #5E5E5E;">$</span>Area_km <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">as.numeric</span>(<span class="fu" style="color: #4758AB;">st_area</span>(w)) <span class="sc" style="color: #5E5E5E;">/</span> <span class="fl" style="color: #AD0000;">1e6</span></span>
<span id="cb23-2">w<span class="sc" style="color: #5E5E5E;">$</span><span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Pop/km2</span><span class="st" style="color: #20794D;">`</span> <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">as.numeric</span>(w<span class="sc" style="color: #5E5E5E;">$</span>POP_EST) <span class="sc" style="color: #5E5E5E;">/</span> w<span class="sc" style="color: #5E5E5E;">$</span>Area_km </span></code></pre></div>
</div>
</section>
<section id="plotting-international-covid-19-data-for-a-single-day" class="level1">
<h1>Plotting international Covid-19 data for a single day</h1>
<p>The class of <code>w</code> shows that it has geometries for each row. Notice that it has many more rows of data than the original world object: geometries are repeated for every year. This is not an efficient way to store data, as it means lots of duplicate geometries. On a small dataset that doesn’t matter, but it’s something to be aware of. To check that the join has worked, we will take a subset of rows representing the global situation yesterday relative to the date of data access:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">w_yesterday <span class="ot" style="color: #003B4F;">=</span> w <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb24-2">  <span class="fu" style="color: #4758AB;">filter</span>(date <span class="sc" style="color: #5E5E5E;">==</span> <span class="fu" style="color: #4758AB;">max</span>(date, <span class="at" style="color: #657422;">na.rm =</span> T) <span class="sc" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb24-3"><span class="fu" style="color: #4758AB;">plot</span>(w_yesterday)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/index_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>The plot method for <code>sf</code> objects is fast and flexible, as documented in <a href="https://r-spatial.github.io/sf/articles/sf5.html"><code>sf</code>’s <em>Plotting Simple Features</em> vignette</a>, which can be accessed with <code>vignette("sf5")</code> from the R console. We can set the breaks to better show the difference between countries with no reported deaths and countries with few reported deaths as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;">plot</span>(w_yesterday[<span class="st" style="color: #20794D;">"deaths"</span>])</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="768"></p>
</div>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">b <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">100</span>, <span class="dv" style="color: #AD0000;">1000</span>, <span class="dv" style="color: #AD0000;">10000</span>, <span class="dv" style="color: #AD0000;">100000</span>)</span>
<span id="cb26-2"><span class="fu" style="color: #4758AB;">plot</span>(w_yesterday[<span class="st" style="color: #20794D;">"deaths"</span>], <span class="at" style="color: #657422;">breaks =</span> b)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/index_files/figure-html/unnamed-chunk-15-2.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>To plot the other Covid-19 variables, reporting number of confirmed cases, number of tests and number of people who have recovered, we can subset the relevant variables and pipe the result to the <code>plot()</code> function (noting the <a href="https://t.co/NyIrKHQSUy">caveat</a> that code containing pipes may be hard to debug) as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1">w_yesterday <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb27-2">  dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">select</span>(deaths, confirmed, tests, recovered) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb27-3">  <span class="fu" style="color: #4758AB;">plot</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="making-maps-with-tmap" class="level1">
<h1>Making maps with tmap</h1>
<p>The <a href="https://geocompr.robinlovelace.net/adv-map.html">mapping chapter</a> of <em>Geocomputation with R</em> shows how the <code>tmap</code> package enables publication-quality maps to be created with concise and relatively commands, such as:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(w_yesterday) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb28-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"deaths"</span>, <span class="st" style="color: #20794D;">"recovered"</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>We can modify the palette and scale as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(w_yesterday) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb29-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(</span>
<span id="cb29-3">    <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"deaths"</span>, <span class="st" style="color: #20794D;">"recovered"</span>),</span>
<span id="cb29-4">    <span class="at" style="color: #657422;">palette =</span> <span class="st" style="color: #20794D;">"viridis"</span>,</span>
<span id="cb29-5">    <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"order"</span></span>
<span id="cb29-6">    ) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/index_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>The map can be further improved by adding graticules representing the curvature of the Earth, created as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1">g <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_graticule</span>(w_yesterday)</span></code></pre></div>
</div>
<p>It’s also worth moving the legend:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(g) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb31-2">  <span class="fu" style="color: #4758AB;">tm_lines</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"grey"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb31-3">  <span class="fu" style="color: #4758AB;">tm_shape</span>(w_yesterday) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb31-4">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(</span>
<span id="cb31-5">    <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"deaths"</span>, <span class="st" style="color: #20794D;">"recovered"</span>),</span>
<span id="cb31-6">    <span class="at" style="color: #657422;">palette =</span> <span class="st" style="color: #20794D;">"viridis"</span>,</span>
<span id="cb31-7">    <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"order"</span></span>
<span id="cb31-8">    ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb31-9">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="fl" style="color: #AD0000;">0.01</span>, <span class="fl" style="color: #AD0000;">0.25</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/index_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>A problem with choropleth maps is that they can under-represent small areas. To overcome this issue we can use dot size instead of color to represent number:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(g) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb32-2">  <span class="fu" style="color: #4758AB;">tm_lines</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"grey"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb32-3">  <span class="fu" style="color: #4758AB;">tm_shape</span>(w_yesterday) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb32-4">  <span class="fu" style="color: #4758AB;">tm_polygons</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb32-5">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="fl" style="color: #AD0000;">0.01</span>, <span class="dv" style="color: #AD0000;">0</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb32-6">  <span class="fu" style="color: #4758AB;">tm_shape</span>(w_yesterday) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb32-7">  <span class="fu" style="color: #4758AB;">tm_dots</span>(</span>
<span id="cb32-8">    <span class="at" style="color: #657422;">col =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"red"</span>, <span class="st" style="color: #20794D;">"green"</span>),</span>
<span id="cb32-9">    <span class="at" style="color: #657422;">size =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"deaths"</span>, <span class="st" style="color: #20794D;">"recovered"</span>),</span>
<span id="cb32-10">    <span class="at" style="color: #657422;">palette =</span> <span class="st" style="color: #20794D;">"viridis"</span></span>
<span id="cb32-11">    )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/index_files/figure-html/unnamed-chunk-21-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>One question I have here: make the size legend have <code>style = "log10_pretty"</code> also?</p>
</section>
<section id="making-animated-maps" class="level1">
<h1>Making animated maps</h1>
<p>The animation at the beginning of this article shows how dynamic graphics can communicate change effectively. Animated maps are therefore useful for showing evolving geographic phenomena, such as the spread of Covid-19 worldwide. As covered in section <a href="https://geocompr.robinlovelace.net/adv-map.html#animated-maps">8.3</a> of <em>Geocomputation with R</em>, animated maps can be created with <code>tmap</code> by extending the <code>tm_facet()</code> functionality. So let’s start by creating a facetted map showing the total number of deaths on the first day of each month in our data:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">w<span class="sc" style="color: #5E5E5E;">$</span>Date <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">as.character</span>(w<span class="sc" style="color: #5E5E5E;">$</span>date)</span>
<span id="cb33-2"><span class="fu" style="color: #4758AB;">tm_shape</span>(g) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb33-3">  <span class="fu" style="color: #4758AB;">tm_lines</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"grey"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb33-4">  <span class="fu" style="color: #4758AB;">tm_shape</span>(w_yesterday) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb33-5">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(</span>
<span id="cb33-6">    <span class="st" style="color: #20794D;">"Pop/km2"</span>,</span>
<span id="cb33-7">    <span class="at" style="color: #657422;">palette =</span> <span class="st" style="color: #20794D;">"viridis"</span>,</span>
<span id="cb33-8">    <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"log10_pretty"</span>,</span>
<span id="cb33-9">    <span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb33-10">    ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb33-11">  <span class="fu" style="color: #4758AB;">tm_shape</span>(w <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">filter</span>(<span class="fu" style="color: #4758AB;">grepl</span>(<span class="at" style="color: #657422;">pattern =</span> <span class="st" style="color: #20794D;">"01$"</span>, date))) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb33-12">  <span class="fu" style="color: #4758AB;">tm_dots</span>(<span class="at" style="color: #657422;">size =</span> <span class="st" style="color: #20794D;">"deaths"</span>, <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"red"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb33-13">  <span class="fu" style="color: #4758AB;">tm_facets</span>(<span class="st" style="color: #20794D;">"Date"</span>, <span class="at" style="color: #657422;">nrow =</span> <span class="dv" style="color: #AD0000;">1</span>, <span class="at" style="color: #657422;">free.scales.fill =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb33-14">  <span class="fu" style="color: #4758AB;">tm_layout</span>(</span>
<span id="cb33-15">    <span class="at" style="color: #657422;">legend.outside.position =</span> <span class="st" style="color: #20794D;">"bottom"</span>,</span>
<span id="cb33-16">    <span class="at" style="color: #657422;">legend.stack =</span> <span class="st" style="color: #20794D;">"horizontal"</span></span>
<span id="cb33-17">    )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/index_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>To create an animated map, following instructions in Chapter <a href="https://geocompr.robinlovelace.net/adv-map.html#animated-maps">8</a> of <em>Geocomputation with R</em>, we need to make some small changes to the code above:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1">m <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">tm_shape</span>(g) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb34-2">  <span class="fu" style="color: #4758AB;">tm_lines</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"grey"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb34-3">  <span class="fu" style="color: #4758AB;">tm_shape</span>(w_yesterday) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb34-4">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(</span>
<span id="cb34-5">    <span class="st" style="color: #20794D;">"Pop/km2"</span>,</span>
<span id="cb34-6">    <span class="at" style="color: #657422;">palette =</span> <span class="st" style="color: #20794D;">"viridis"</span>,</span>
<span id="cb34-7">    <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"log10_pretty"</span>,</span>
<span id="cb34-8">    <span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb34-9">    ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb34-10">  <span class="fu" style="color: #4758AB;">tm_shape</span>(w <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">filter</span>(<span class="fu" style="color: #4758AB;">grepl</span>(<span class="at" style="color: #657422;">pattern =</span> <span class="st" style="color: #20794D;">"01$"</span>, date))) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb34-11">  <span class="fu" style="color: #4758AB;">tm_dots</span>(<span class="at" style="color: #657422;">size =</span> <span class="st" style="color: #20794D;">"deaths"</span>, <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"red"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb34-12">  <span class="fu" style="color: #4758AB;">tm_facets</span>(<span class="at" style="color: #657422;">along =</span> <span class="st" style="color: #20794D;">"Date"</span>, <span class="at" style="color: #657422;">free.coords =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb34-13">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb34-14"><span class="fu" style="color: #4758AB;">tmap_animation</span>(m, <span class="st" style="color: #20794D;">"covid-19-animated-map-test.gif"</span>, <span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">800</span>)</span>
<span id="cb34-15"><span class="fu" style="color: #4758AB;">browseURL</span>(<span class="st" style="color: #20794D;">"covid-19-animated-map-test.gif"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/https:/user-images.githubusercontent.com/1825120/80087377-e7bda780-8552-11ea-959f-55b154c715fa.gif" class="img-fluid" style="width:40.0%"></p>
</div>
</div>
<p>We made an animated map! The first version is rarely the best though, and the map above clearly could benefit from some adjustments before we plot the results for the whole dataset:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1">w<span class="sc" style="color: #5E5E5E;">$</span>Date <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">paste0</span>(<span class="st" style="color: #20794D;">"Total deaths from 22nd January 2020 to "</span>, w<span class="sc" style="color: #5E5E5E;">$</span>date)</span>
<span id="cb35-2"></span>
<span id="cb35-3">m <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">tm_shape</span>(g) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb35-4">  <span class="fu" style="color: #4758AB;">tm_lines</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"grey"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb35-5">  <span class="fu" style="color: #4758AB;">tm_shape</span>(w) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb35-6">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(</span>
<span id="cb35-7">    <span class="st" style="color: #20794D;">"Pop/km2"</span>,</span>
<span id="cb35-8">    <span class="at" style="color: #657422;">palette =</span> <span class="st" style="color: #20794D;">"viridis"</span>,</span>
<span id="cb35-9">    <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"log10_pretty"</span>,</span>
<span id="cb35-10">    <span class="at" style="color: #657422;">lwd =</span> <span class="fl" style="color: #AD0000;">0.5</span></span>
<span id="cb35-11">    ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb35-12">  <span class="fu" style="color: #4758AB;">tm_shape</span>(w) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb35-13">  <span class="fu" style="color: #4758AB;">tm_dots</span>(<span class="at" style="color: #657422;">size =</span> <span class="st" style="color: #20794D;">"deaths"</span>, <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"red"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb35-14">  <span class="fu" style="color: #4758AB;">tm_facets</span>(<span class="at" style="color: #657422;">along =</span> <span class="st" style="color: #20794D;">"Date"</span>, <span class="at" style="color: #657422;">free.coords =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb35-15">  <span class="fu" style="color: #4758AB;">tm_layout</span>(</span>
<span id="cb35-16">    <span class="at" style="color: #657422;">main.title.size =</span> <span class="fl" style="color: #AD0000;">0.5</span>,</span>
<span id="cb35-17">    <span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb35-18">    )</span>
<span id="cb35-19"><span class="fu" style="color: #4758AB;">tmap_animation</span>(m, <span class="st" style="color: #20794D;">"covid-19-animated-map.gif"</span>, <span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">1400</span>, <span class="at" style="color: #657422;">height =</span> <span class="dv" style="color: #AD0000;">600</span>)</span>
<span id="cb35-20"><span class="fu" style="color: #4758AB;">browseURL</span>(<span class="st" style="color: #20794D;">"covid-19-animated-map.gif"</span>)</span></code></pre></div>
</div>
<!--update the file below-->
<p><img src="https://geocompx.org/post/2020/r-spatial-demo-covid-19/https:/user-images.githubusercontent.com/1825120/80092918-7f26f880-855b-11ea-8017-c4ec6e382209.gif" class="img-fluid"></p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>This article has demonstrated how to work with and map geographic data using the free and open source statistical programming language R. It demonstrates that by representing analysis in code, research can be made reproducible and more accessible to others, encouraging transparent and open science. This has multiple advantages, from education and citizen engagement with the evidence to increased trust in the evidence on which important, life-or-death, decisions are made.</p>
<p>Although the research did not address any policy issues, it could be extended to do so, and we encourage readers to check-out the following resources for ideas for future research:</p>
<ul>
<li>A <a href="https://github.com/paezha/covid19-environmental-correlates#a-spatio-temporal-analysis-of-the-environmental-correlates-of-covid-19-incidence-in-spain">reproducible geographic analysis</a> of Covid-19 data in Spain by <a href="https://www.science.mcmaster.ca/geo/component/comprofiler/userprofile/paezha.html">Antonio Paez</a> and others (challenge: reproduce their findings)</li>
<li>The eRum2020 <a href="https://2020.erum.io/covidr-contest/">CovidR competition</a> (challenge: enter the contest!)</li>
<li>Try downloading the the city-level data with this command and exploring the geographic distribution of the outbreak at the city level:</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1">d_city <span class="ot" style="color: #003B4F;">=</span> COVID19<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">covid19</span>(<span class="at" style="color: #657422;">level =</span> <span class="dv" style="color: #AD0000;">3</span>)</span></code></pre></div>
</div>
<p>For further details on geographic data analysis in R in general, we recommend checkout out in-depth materials such as <a href="https://www.amazon.co.uk/Geocomputation-Chapman-Hall-Robin-Lovelace/dp/1138304514"><em>Geocomputation with R</em></a> and the in-progress open source book <a href="https://keen-swartz-3146c4.netlify.app/"><em>Spatial Data Science</em></a>.</p>
<p>There is also an <a href="https://www.youtube.com/watch?v=Va0STgco7-4">online talk</a> on the subject on YouTube.</p>
<details>
<summary>
Session info
</summary>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1">sessioninfo<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">session_info</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.2.2 (2022-10-31)
 os       Fedora Linux 37 (Thirty Seven)
 system   x86_64, linux-gnu
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Warsaw
 date     2022-12-20
 pandoc   2.19.2 @ /usr/lib/rstudio/bin/quarto/bin/tools/ (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 ! package      * version   date (UTC) lib source
 P abind          1.4-5     2016-07-21 [?] CRAN (R 4.2.2)
 P base64enc      0.1-3     2015-07-28 [?] CRAN (R 4.2.2)
 P bit            4.0.5     2022-11-15 [?] CRAN (R 4.2.2)
 P bit64          4.0.5     2020-08-30 [?] CRAN (R 4.2.2)
 P class          7.3-20    2022-01-16 [?] CRAN (R 4.2.2)
 P classInt       0.4-8     2022-09-29 [?] CRAN (R 4.2.2)
 P cli            3.4.1     2022-09-23 [?] CRAN (R 4.2.2)
 P codetools      0.2-18    2020-11-04 [?] CRAN (R 4.2.2)
 P crayon         1.5.2     2022-09-29 [?] CRAN (R 4.2.2)
 P crosstalk      1.2.0     2021-11-04 [?] CRAN (R 4.2.2)
 P curl           4.3.3     2022-10-06 [?] CRAN (R 4.2.2)
 P DBI            1.1.3     2022-06-18 [?] CRAN (R 4.2.2)
 P dichromat      2.0-0.1   2022-05-02 [?] CRAN (R 4.2.2)
 P digest         0.6.31    2022-12-11 [?] CRAN (R 4.2.2)
 P dplyr        * 1.0.10    2022-09-01 [?] CRAN (R 4.2.2)
 P e1071          1.7-12    2022-10-24 [?] CRAN (R 4.2.2)
 P ellipsis       0.3.2     2021-04-29 [?] CRAN (R 4.2.2)
 P evaluate       0.19      2022-12-13 [?] CRAN (R 4.2.2)
 P fansi          1.0.3     2022-03-24 [?] CRAN (R 4.2.2)
 P fastmap        1.1.0     2021-01-25 [?] CRAN (R 4.2.2)
 P generics       0.1.3     2022-07-05 [?] CRAN (R 4.2.2)
 P glue           1.6.2     2022-02-24 [?] CRAN (R 4.2.2)
 P hms            1.1.2     2022-08-19 [?] CRAN (R 4.2.2)
 P htmltools      0.5.4     2022-12-07 [?] CRAN (R 4.2.2)
 P htmlwidgets    1.6.0     2022-12-15 [?] CRAN (R 4.2.2)
 P jsonlite       1.8.4     2022-12-06 [?] CRAN (R 4.2.2)
 P KernSmooth     2.23-20   2021-05-03 [?] CRAN (R 4.2.2)
 P knitr          1.41      2022-11-18 [?] CRAN (R 4.2.2)
 P lattice        0.20-45   2021-09-22 [?] CRAN (R 4.2.2)
 P leafem         0.2.0     2022-04-16 [?] CRAN (R 4.2.2)
 P leaflet        2.1.1     2022-03-23 [?] CRAN (R 4.2.2)
 P leafsync       0.1.0     2019-03-05 [?] CRAN (R 4.2.2)
 P lifecycle      1.0.3     2022-10-07 [?] CRAN (R 4.2.2)
 P lwgeom         0.2-10    2022-11-19 [?] CRAN (R 4.2.2)
 P magrittr       2.0.3     2022-03-30 [?] CRAN (R 4.2.2)
 P pillar         1.8.1     2022-08-19 [?] CRAN (R 4.2.2)
 P pkgconfig      2.0.3     2019-09-22 [?] CRAN (R 4.2.2)
 P png            0.1-8     2022-11-29 [?] CRAN (R 4.2.2)
 P proxy          0.4-27    2022-06-09 [?] CRAN (R 4.2.2)
 P R6             2.5.1     2021-08-19 [?] CRAN (R 4.2.2)
 P raster         3.6-11    2022-11-28 [?] CRAN (R 4.2.2)
 P RColorBrewer   1.1-3     2022-04-03 [?] CRAN (R 4.2.2)
 P Rcpp           1.0.9     2022-07-08 [?] CRAN (R 4.2.2)
 P readr          2.1.3     2022-10-01 [?] CRAN (R 4.2.2)
   renv           0.16.0    2022-09-29 [2] CRAN (R 4.2.2)
 P rlang          1.0.6     2022-09-24 [?] CRAN (R 4.2.2)
 P rmarkdown      2.19      2022-12-15 [?] CRAN (R 4.2.2)
 P rstudioapi     0.14      2022-08-22 [?] CRAN (R 4.2.2)
 P sessioninfo    1.2.2     2021-12-06 [?] CRAN (R 4.2.2)
 P sf           * 1.0-9     2022-11-08 [?] CRAN (R 4.2.2)
 P sp             1.5-1     2022-11-07 [?] CRAN (R 4.2.2)
 P stars          0.6-0     2022-11-21 [?] CRAN (R 4.2.2)
 P stringi        1.7.8     2022-07-11 [?] CRAN (R 4.2.2)
 P stringr        1.5.0     2022-12-02 [?] CRAN (R 4.2.2)
 P terra          1.6-47    2022-12-02 [?] CRAN (R 4.2.2)
 P tibble         3.1.8     2022-07-22 [?] CRAN (R 4.2.2)
 P tidyselect     1.2.0     2022-10-10 [?] CRAN (R 4.2.2)
 P tmap         * 3.3-3     2022-03-02 [?] CRAN (R 4.2.2)
 P tmaptools      3.1-1     2021-01-19 [?] CRAN (R 4.2.2)
 P tzdb           0.3.0     2022-03-28 [?] CRAN (R 4.2.2)
 P units          0.8-1     2022-12-10 [?] CRAN (R 4.2.2)
 P utf8           1.2.2     2021-07-24 [?] CRAN (R 4.2.2)
 P vctrs          0.5.1     2022-11-16 [?] CRAN (R 4.2.2)
 P viridisLite    0.4.1     2022-08-22 [?] CRAN (R 4.2.2)
 P vroom          1.6.0     2022-09-30 [?] CRAN (R 4.2.2)
 P withr          2.5.0     2022-03-03 [?] CRAN (R 4.2.2)
 P xfun           0.35      2022-11-16 [?] CRAN (R 4.2.2)
 P XML            3.99-0.13 2022-12-04 [?] CRAN (R 4.2.2)
 P yaml           2.3.6     2022-10-18 [?] CRAN (R 4.2.2)

 [1] /tmp/Rtmp2F9iQn/renv-library-6dbab52f30514
 [2] /home/jn/Science/geocompr/geocompr.github.io/renv/library/R-4.2/x86_64-redhat-linux-gnu
 [3] /home/jn/Science/geocompr/geocompr.github.io/renv/sandbox/R-4.2/x86_64-redhat-linux-gnu/60c4e220

 P ── Loaded and on-disk path mismatch.

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>
</details>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{lovelace2020,
  author = {Robin Lovelace},
  title = {Demo of Reproducible Geographic Data Analysis: Mapping
    {Covid-19} Data with {R}},
  date = {2020-04-23},
  url = {https://geocompx.org//post/2020/r-spatial-demo-covid-19},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-lovelace2020" class="csl-entry quarto-appendix-citeas">
Robin Lovelace. 2020. <span>“Demo of Reproducible Geographic Data
Analysis: Mapping Covid-19 Data with R.”</span> April 23, 2020. <a href="https://geocompx.org//post/2020/r-spatial-demo-covid-19">https://geocompx.org//post/2020/r-spatial-demo-covid-19</a>.
</div></div></section></div> ]]></description>
  <category>demo</category>
  <category>rstats</category>
  <guid>https://geocompx.org/post/2020/r-spatial-demo-covid-19/index.html</guid>
  <pubDate>Wed, 22 Apr 2020 22:00:00 GMT</pubDate>
  <media:content url="https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Katapult_importance_social_distancing.gif/350px-Katapult_importance_social_distancing.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Installing spatial R packages on Ubuntu</title>
  <dc:creator>Robin Lovelace</dc:creator>
  <link>https://geocompx.org/post/2020/installing-r-spatial-packages-linux/index.html</link>
  <description><![CDATA[ 



<p>This post explains how to quickly get key R packages for geographic research installed on <a href="https://ubuntu.com/">Ubuntu</a>, a popular Linux distribution.</p>
<!-- ![](/home/robin/geocompr/geocompr.github.io/static/img/geocompr-linux.png) -->
<p>A recent thread on the <a href="https://github.com/r-spatial/discuss/issues/35">r-spatial GitHub organization</a> alludes to many considerations when choosing a Linux set-up for work with geographic data, ranging from the choice of Linux distribution (distro) to the use of binary vs or compiled versions (binaries are faster to install). This post touches on some of these things. Its main purpose, though, is to provide advice on getting R’s key spatial packages up-and-running on a future-proof Linux operating system (Ubuntu).</p>
<p>Now is a good time to be thinking about your R set-up because changes are in the pipeline and getting set-up (or preparing to get set-up) now could save hours in the future. These imminent changes include:</p>
<ul>
<li>The next major release of R (<a href="https://stat.ethz.ch/R-manual/R-devel/doc/html/NEWS.html">4.0.0</a>), scheduled for the 24<sup>th</sup> April (<a href="https://developer.r-project.org/">2020-04-24</a>)</li>
<li>The next major release of Ubuntu (<a href="https://www.omgubuntu.co.uk/2019/10/ubuntu-20-04-release-features">20.04</a>), a Long Term Support (<a href="https://wiki.ubuntu.com/LTS">LTS</a>) version that will be used by millions of servers and research computers worldwide for years to come. Coincidentally, Ubuntu 20.04 will be released a day earlier than R 4.0.0, on 23<sup>rd</sup> April (<a href="https://itsfoss.com/ubuntu-20-04-release-features/">2020-04-23</a>).</li>
<li>Ongoing changes to the OSGeo stack on which key geographic R packages depend, as documented in <a href="https://github.com/r-spatial/">r-spatial</a> repos and a recent blog post on how recent versions of PROJ enable more precise <a href="https://www.r-spatial.org/r/2020/03/17/wkt.html">coordinate reference system definitions</a>.</li>
</ul>
<p>To keep-up with these changes, this post will be updated in late April when some of the dust has settled around these changes. However, the advice presented here should be future-proof. Upgrading Ubuntu is covered in the next section.</p>
<p>There many ways of getting Ubuntu set-up for spatial R packages. A benefit of Linux operating systems is that they offer choice and prevent ‘lock-in’. However, the guidance in the next section should reduce set-up time and improve maintainability (with updates managed by Ubuntu) compared with other ways of doing things, especially for beginners. If you’re planning to switch to Linux as the basis of your geographic work, this advice may be particularly useful. (The post was written in response to colleagues asking me how to set-up R on their new Ubuntu computers. If you would like a a computer running Ubuntu, check out <a href="https://itsfoss.com/get-linux-laptops/">companies that support open source operating systems</a> and <a href="https://ubuntu.com/tutorials/tutorial-install-ubuntu-desktop#1-overview">guides on installing Ubuntu on an existing machine</a>).</p>
<p>By ‘key packages’ I mean the following, which enable the majority of day-to-day geographic data processing and visualization tasks:</p>
<ul>
<li><a href="https://github.com/r-spatial/sf#installing"><strong>sf</strong></a> for reading, writing and working with a range geographic vector file formats and geometry types</li>
<li><a href="https://github.com/rspatial/raster/"><strong>raster</strong></a>, a mature package for working with geographic raster data (see the <a href="https://github.com/rspatial/terra/"><strong>terra</strong></a> for an in-development replacement for <strong>raster</strong>)</li>
<li><a href="https://github.com/mtennekes/tmap"><strong>tmap</strong></a>, a flexible package for making static and interactive maps</li>
</ul>
<p>The focus is on Ubuntu because that’s what I’ve got most experience with and it is well supported by the community. Links for installing geographic R packages on other distros are provided in section 3.</p>
<section id="installing-spatial-r-packages-on-ubuntu" class="level1">
<h1>1. Installing spatial R packages on Ubuntu</h1>
<!-- Of course, it depends on what Linux distribution you're running, and we'll cover installation on some of the most popular [distros](https://distrowatch.com/). -->
<!-- ## Ubuntu -->
<p>R’s spatial packages can be installed from source on the latest version of this popular operating system, once the appropriate repository has been set-up, meaning faster install times (only a few minutes including the installation of upstream dependencies). The following bash commands should install key geographic R packages on Ubuntu 19.10:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># add a repository that ships the latest version of R:</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">sudo</span> add-apt-repository ppa:marutter/rrutter3.5</span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;"># update the repositories so the software can be found:</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">sudo</span> apt update</span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;"># install system dependencies:</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">sudo</span> apt install libudunits2-dev libgdal-dev libgeos-dev libproj-dev libfontconfig1-dev</span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;"># binary versions of key R packages:</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;">sudo</span> apt install r-base-dev r-cran-sf r-cran-raster r-cran-rjava</span></code></pre></div>
<p>To test your installation of R has worked, try running R in an IDE such as RStudio or in the terminal by entering <code>R</code>. You should be able to run the following commands without problem:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(sf)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;">#&gt; Linking to GEOS 3.7.2, GDAL 2.4.2, PROJ 5.2.0</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"tmap"</span>)</span></code></pre></div>
<p>If you are using an older version of Ubuntu and don’t want to upgrade to 19.10, which will upgrade to (20.04) by the end of April 2020, see instructions at <a href="https://github.com/r-spatial/sf#installing">github.com/r-spatial/sf</a> and detailed instructions on the blog <a href="https://rtask.thinkr.fr/blog/installation-of-r-3-5-on-ubuntu-18-04-lts-and-tips-for-spatial-packages/">rtask.thinkr.fr</a>, which contains this additional shell command:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># for Ubuntu 18.04</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">sudo</span> add-apt-repository ppa:marutter/c2d4u3.5</span></code></pre></div>
<p>That adds a repository that ships hundreds of binary versions of R packages, meaning faster install times for packages (see the <a href="https://r-pkgs.org/package-structure-state.html#binary-package">Binary package section of the open source book R Packages</a> for more on binary packages). An updated repository, called c2d4u4.0 or similar, will be available for Ubuntu 20.04 in late April.</p>
<!-- The c2d4u3.5 repository only supports LTS Ubuntu versions, meaning it is unavailable for Ubuntu 19.10, but will be available for Ubuntu 20.04, allowing hundreds of packages to be installed quickly from the system terminal. -->
<!-- The following command, for example, will install **tmap** on LTS versions of Ubuntu that have the `c2d4u3.5` repository enabled much faster than the alternative `install.packages()` approach. -->
<p>If you have issues with the instructions in this post here, you can find a wealth of answers on site such as <a href="https://stackoverflow.com/">StackOverflow</a>, the <a href="https://github.com/r-spatial/sf/issues">sf issue tracker</a>, <a href="https://stat.ethz.ch/pipermail/r-sig-geo/">r-sig-geo</a> and <a href="https://stat.ethz.ch/pipermail/r-sig-debian/2020-March/thread.html">Debian</a> special interest group (SIG) email lists (the latter of which provided input into this blog post, thanks to Dirk Eddelbuettel and Michael Rutter).</p>
</section>
<section id="updating-r-packages-and-upstream-dependencies" class="level1">
<h1>2. Updating R packages and upstream dependencies</h1>
<p>Linux operating systems allow you to customize your set-up in myriad ways. This can be enlightening but it can also be wasteful, so it’s worth considering the stability/cutting-edge continuum before diving into a particular set-up and potentially wasting time (if the previous section hasn’t already made-up your mind).</p>
<!-- For me, a good set-up, that means the latest version of Ubuntu plus CRAN versions of most R packages. -->
<!-- For most people I recommend installing the release version as follows: -->
<p>A reliable way to keep close (but not too close) to the cutting edge on the R side on any operating system is simply to keep your packages up-to-date. Running the following command (or using the Tools menu in RStudio) every week or so will ensure you have up-to-date package versions:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">update.packages</span>()</span></code></pre></div>
</div>
<p>Keeping system dependencies, software that R relies on but that is not maintained by R developers, is also important but can be tricky, especially for large and complex libraries like GDAL. On Ubuntu dependencies are managed by apt, and the following commands will update the ‘OSGeo stack’, composed of PROJ, GEOS and GDAL, if changes are detected in the default repositories (from 18.10 onwards):</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;">sudo</span> apt update <span class="co" style="color: #5E5E5E;"># see if things have changed</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;">sudo</span> apt upgrade <span class="co" style="color: #5E5E5E;"># install changes</span></span></code></pre></div>
<p>The following commands will upgrade to a newer version of Ubuntu (it may be worth waiting until the <a href="https://ubuntu.com/blog/first-point-release-of-18-04-lts-available-today">point release</a> of Ubuntu 20.04 — 20.04.1 — is released in summer before upgrading if you’re currently running Ubuntu 18.04 if high stability and low set-up times are priorities; also see instructions <a href="https://ubuntu.com/tutorials/tutorial-upgrading-ubuntu-desktop#3-check-for-updates">here</a>):</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;">apt</span> dist-upgrade</span></code></pre></div>
<p>To get more up-to-date upstream geographic libraries than provided in the default Ubuntu repositories, you can add the <code>ubuntugis</code> repository as follows. This is a pre-requisite on Ubuntu 18.04 and earlier but also works with later versions (warning, adding this repository could cause complications if you already have software such as QGIS that uses a particular version of GDAL installed):</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="fu" style="color: #4758AB;">sudo</span> add-apt-repository ppa:ubuntugis/ubuntugis-unstable</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;">sudo</span> apt update</span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;">sudo</span> apt upgrade</span></code></pre></div>
<p>That will give you more up-to-date versions of GDAL, GEOS and PROJ which may offer some performance improvements. Note: if you do update dependencies such as GDAL you will need to re-install the relevant packages, e.g.&nbsp;with <code>install.packages("sf")</code>. You can revert that change with the following <a href="https://askubuntu.com/questions/904010/how-to-remove-a-ppa-from-cli">little-known command</a>:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="fu" style="color: #4758AB;">sudo</span> add-apt-repository <span class="at" style="color: #657422;">--remove</span> ppa:ubuntugis/ubuntugis-unstable</span></code></pre></div>
<p>If you also want the development versions of key R packages, e.g.&nbsp;to test new features and support development efforts, you can install them from GitHub, e.g.&nbsp;as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">remotes<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">install_github</span>(<span class="st" style="color: #20794D;">"r-spatial/sf"</span>)</span>
<span id="cb9-2">remotes<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">install_github</span>(<span class="st" style="color: #20794D;">"rspatial/raster"</span>)</span>
<span id="cb9-3">remotes<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">install_github</span>(<span class="st" style="color: #20794D;">"mtennekes/tmaptools"</span>) <span class="co" style="color: #5E5E5E;"># required for dev version of tmap</span></span>
<span id="cb9-4">remotes<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">install_github</span>(<span class="st" style="color: #20794D;">"mtennekes/tmap"</span>)</span></code></pre></div>
</div>
</section>
<section id="installing-geographic-r-packages-on-other-linux-operating-systems" class="level1">
<h1>3. Installing geographic R packages on other Linux operating systems</h1>
<p>If you are in the fortunate position of switching to Linux and being able to choose the distribution that best fits your needs, it’s worth thinking about which distribution will be both user-friendly (more on that soon), performant and future-proof. Ubuntu is a solid choice, with a large user community and repositories such as ‘ubuntugis’ providing more up-to-date versions of upstream geographic libraries such as GDAL.</p>
<p>QGIS is also well-supported on Ubuntu.</p>
<p>However, you can install R and key geographic packages on other operating systems, although it may take longer. Useful links on installing R and geographic libraries are provided below for reference:</p>
<ul>
<li><p>Installing R on <strong>Debian</strong> is covered on the <a href="https://cran.r-project.org/bin/linux/debian/">CRAN website</a>. Upstream dependencies such as GDAL can be installed on recent versions of Debian, such as <a href="https://www.debian.org/releases/">buster</a>, with commands such as <code>apt install libgdal-dev</code> as per instructions on the <a href="https://github.com/rocker-org/geospatial/blob/eaf5e92f90737ce9771753cab48f3a2f1d779216/Dockerfile">rocker/geospatial</a>.</p></li>
<li><p>Installing R on <strong>Fedora/Red Hat</strong> is straightforward, as outlined on <a href="https://cran.r-project.org/bin/linux/redhat/README">CRAN</a>. GDAL and other spatial libraries can be installed from Fedora’s <code>dnf</code> package manager, e.g.&nbsp;as documented <a href="https://github.com/r-spatial/sf#fedora">here</a> for <strong>sf</strong>.</p></li>
<li><p><strong>Arch Linux</strong> has a growing R community. Information on installing and setting-up R can be found on the <a href="https://wiki.archlinux.org/index.php/R">ArchLinux wiki</a>. Installing upstream dependencies such as <a href="https://www.archlinux.org/packages/community/x86_64/gdal/">GDAL on Arch</a> is also relatively straightforward. There is also a detailed guide for installing R plus geographic packages by <a href="https://pat-s.me/post/arch-install-guide-for-r/">Patrick Schratz</a>.</p></li>
</ul>
</section>
<section id="geographic-r-packages-on-docker" class="level1">
<h1>4. Geographic R packages on Docker</h1>
<!-- As with cars, ease of use is important for the popularity of computer technology. -->
<!-- ^[ -->
<!-- The history of cars can provide insight into the importance of ease of use of technologies today. -->
<!-- Cars, have arguably transformed our settlements and lifestyles more than any other technology, were initially hard to use. -->
<!-- Before they became a consumer product in the 1950s (by the end of which 1/6^th^ of jobs in the USA were in the [car industry](https://en.wikipedia.org/wiki/1950s_American_automobile_culture)) relied on a [hand cranks](https://www.youtube.com/watch?v=iFd8uo7ogpM) to start them until the proliferation of electric starter motors following U.S. Patent [1,150,523](https://patents.google.com/patent/US1150523), which was subsequently used by Cadillac in [1912](https://www.hemmings.com/blog/2012/02/27/the-accident-that-started-it-all/) and onwards. -->
<!-- Like cars, people tend to go for computer technologies that are easy to use, that are 'plug and play', so it's important for the future of open-source software that the solutions I recommend are easy to set-up and use. -->
<!-- ] -->
<p>The Ubuntu installation instructions outlined above provide such an easy and future-proof set-up. But if you want an even easier way to get the power of key geographic packages running on Linux, and have plenty of RAM and HD space, running R on the ‘<a href="https://docs.docker.com/install/">Docker Engine</a>’ may be an attractive option.</p>
<p>Advantages of using Docker include <strong>reproducibility</strong> (code will always run the same on any given image, and images can be saved), <strong>portability</strong> (Docker can run on Linux, Windows and Mac) and <strong>scalability</strong> (Docker provides a platform for scaling-up computations across multiple nodes).</p>
<p>For an introduction to using R/RStudio in Docker, see the <a href="https://www.rocker-project.org/">Rocker project</a>.</p>
<p>Using that approach, I recommend the following Docker images for using R as a basis for geographic research:</p>
<ul>
<li><a href="https://hub.docker.com/r/rocker/geospatial"><code>rocker/geospatial</code></a> which contains key geographic packages, including those listed above</li>
<li><a href="https://hub.docker.com/r/robinlovelace/geocompr/"><code>robinlovelace/geocompr</code></a> which contains all the packages needed to reproduce the contents of the <a href="https://geocompr.robinlovelace.net/">book</a>, and which you can run with the following command in a shell in which Docker is installed:</li>
</ul>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;">docker</span> run <span class="at" style="color: #657422;">-e</span> PASSWORD=yourpassword <span class="at" style="color: #657422;">--rm</span> <span class="at" style="color: #657422;">-p</span> 8787:8787 robinlovelace/geocompr</span></code></pre></div>
<p>To test-out the Ubuntu 19.10 set-up recommended above I created a <a href="https://github.com/Robinlovelace/geocompr/blob/master/docker/ubuntu-eoan/Dockerfile">Dockerfile</a> and associated image on Dockerhub that you can test-out as follows:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;">docker</span> run <span class="at" style="color: #657422;">-it</span> robinlovelace/geocompr:ubuntu-eoan</span>
<span id="cb11-2"><span class="ex" style="color: null;">R</span></span>
<span id="cb11-3"><span class="ex" style="color: null;">library</span><span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">sf</span><span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;">#&gt; Linking to GEOS 3.7.2, GDAL 2.4.2, PROJ 5.2.0</span></span>
<span id="cb11-5"><span class="ex" style="color: null;">library</span><span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">raster</span><span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb11-6"><span class="ex" style="color: null;">library</span><span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">tmap</span><span class="kw" style="color: #003B4F;">)</span> </span></code></pre></div>
<p>The previous commands should take you to a terminal inside the docker container where you try out the Linux command line and R. If you want to use more cutting-edge versions of the geographic libraries, you can use the <code>ubuntu-bionic</code> image (note the more recent version numbers, with PROJ 7.0.0 for example):</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="fu" style="color: #4758AB;">sudo</span> docker run <span class="at" style="color: #657422;">-it</span> robinlovelace/geocompr:ubuntu-bionic</span>
<span id="cb12-2"><span class="ex" style="color: null;">R</span></span>
<span id="cb12-3"><span class="ex" style="color: null;">library</span><span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">sf</span><span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;">#&gt; Linking to GEOS 3.8.0, GDAL 3.0.4, PROJ 7.0.0</span></span></code></pre></div>
<p>These images do not currently contain all the dependencies needed to reproduce the code in <em>Geocomputation with R</em>. <!-- , if you're looking for a production-ready Docker image that has both RStudio Server and a wide range of geographic packages pre-installed, building from the `rocker/geospatial` image, this could be a good place to start: --></p>
<p>However, as documented in <a href="https://github.com/Robinlovelace/geocompr/issues/476">issue 476</a> in the <code>geocompr</code> GitHub repo, there is a plan to provide Docker images with this full ‘R-spatial’ stack installed, building on strong foundations such as <code>rocker/geospatial</code> and the <code>ubuntugis</code> repositories, to support different versions of GDAL and other dependencies. We welcome any comments or tech support to help make this happen. Suggested changes to this post are also welcome, see the source code <a href="https://github.com/geocompr/geocompr.github.io/blob/source/content/post/2020/installing-r-spatial-packages-linux.Rmd">here</a>.</p>
</section>
<section id="fin" class="level1">
<h1>5. Fin</h1>
<p>R is an open-source language heavily inspired by Unix/Linux so it should come as no surprise that it runs well on a variety of Linux distributions, Ubuntu (covered in this post) in particular. The guidance in this post should get geographic R packages set-up quickly in a future-proof way. A sensible next step is to sharpen you system administration (sysadmin) and shell coding skills, e.g.&nbsp;with reference to <a href="https://help.ubuntu.com/community/SystemAdministration">Ubuntu wiki pages</a> and <a href="https://www.datascienceatthecommandline.com/chapter-2-getting-started.html#essential-gnulinux-concepts">Chapter 2</a> of the open source book <a href="https://www.datascienceatthecommandline.com">Data Science at the Command Line</a>.</p>
<p>This will take time but, building on <a href="https://www.osgeo.org/">OSGeo</a> libraries, a well set-up Linux machine is an ideal platform to install, run and develop key geographic R packages in a performant, stable and future-proof way. <!-- I hope that this tutorial provides some useful pointers and encourages more people to switch from proprietary software to open source solutions as the basis of their geographic and computational work. --></p>
<p><img src="https://geocompx.org/post/2020/installing-r-spatial-packages-linux/https:/www.osgeo.org/wp-content/themes/roots/assets/img/logo-osgeo.svg" class="img-fluid"></p>
<p>Be the <a href="https://wiki.osgeo.org/wiki/FOSS4G">FOSS4G</a> change you want to see in the world!</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{lovelace2020,
  author = {Robin Lovelace},
  title = {Installing Spatial {R} Packages on {Ubuntu}},
  date = {2020-03-30},
  url = {https://geocompx.org//post/2020/installing-r-spatial-packages-linux},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-lovelace2020" class="csl-entry quarto-appendix-citeas">
Robin Lovelace. 2020. <span>“Installing Spatial R Packages on
Ubuntu.”</span> March 30, 2020. <a href="https://geocompx.org//post/2020/installing-r-spatial-packages-linux">https://geocompx.org//post/2020/installing-r-spatial-packages-linux</a>.
</div></div></section></div> ]]></description>
  <category>setup</category>
  <category>rstats</category>
  <guid>https://geocompx.org/post/2020/installing-r-spatial-packages-linux/index.html</guid>
  <pubDate>Sun, 29 Mar 2020 22:00:00 GMT</pubDate>
  <media:content url="https://geocompx.org/home/robin/geocompr/geocompr.github.io/static/img/geocompr-linux.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Inset maps with ggplot2</title>
  <dc:creator>Jakub Nowosad</dc:creator>
  <link>https://geocompx.org/post/2019/ggplot2-inset-maps/index.html</link>
  <description><![CDATA[ 



<p>Inset maps enable multiple places to be shown in the same geographic data visualisation, as described in the <a href="https://geocompr.robinlovelace.net/adv-map.html#inset-maps">Inset maps section (8.2.7)</a> of our open source book Geocomputation with R. The topic of inset maps has gained attention and recently <a href="https://twitter.com/espinielli/">Enrico Spinielli</a> <a href="systemshttps://twitter.com/espinielli/status/1191452410394361863">asked inset maps could be created for data in unusual coordinate</a>.</p>
<p>R’s flexibility allows inset maps to be created in various ways, using different approaches and packages. However, the main idea stays the same: we need to create at least two maps: a larger one, called the main map, that shows the central story and a smaller one, called the inset map, that puts the main map in context.</p>
<p>This blog post shows how to create inset maps with <strong>ggplot2</strong> for visualization. The approach also uses the <strong>sf</strong> package for spatial data reading and handling, <strong>cowplot</strong> to arrange inset maps, and <strong>rcartocolor</strong> for additional color palettes. To reproduce the results on your own computer, after installing them, these packages can be attached as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(sf)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(cowplot)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">library</span>(rcartocolor)</span></code></pre></div>
</div>
<section id="basic-inset-map" class="level1">
<h1>Basic inset map</h1>
<p>Let’s start by creating a basic inset map.</p>
<section id="data-preparation" class="level2">
<h2 class="anchored" data-anchor-id="data-preparation">Data preparation</h2>
<p>The first step is to read and prepare the data we want to visualize. We use the <code>us_states</code> data from the <strong>spData</strong> package as the source of the inset map, and <code>north_carolina</code> from the <strong>sf</strong> package as the source of the main map.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(spData)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">data</span>(<span class="st" style="color: #20794D;">"us_states"</span>, <span class="at" style="color: #657422;">package =</span> <span class="st" style="color: #20794D;">"spData"</span>)</span>
<span id="cb2-3">north_carolina <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">read_sf</span>(<span class="fu" style="color: #4758AB;">system.file</span>(<span class="st" style="color: #20794D;">"shape/nc.shp"</span>, <span class="at" style="color: #657422;">package =</span> <span class="st" style="color: #20794D;">"sf"</span>))</span></code></pre></div>
</div>
<p>Both objects should have the same coordinate reference system (<code>crs</code>). Here, we use <code>crs = 2163</code>, which represents the US National Atlas Equal Area projection.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">us_states_2163 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_transform</span>(us_states, <span class="at" style="color: #657422;">crs =</span> <span class="dv" style="color: #AD0000;">2163</span>)</span>
<span id="cb3-2">north_carolina_2163 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_transform</span>(north_carolina, <span class="at" style="color: #657422;">crs =</span> <span class="dv" style="color: #AD0000;">2163</span>)</span></code></pre></div>
</div>
<p>We also need to have the borders of the area we want to highlight (use in the main map). This can be done by extracting the bounding box of our <code>north_carolina_2163</code> object.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">north_carolina_2163_bb <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_as_sfc</span>(<span class="fu" style="color: #4758AB;">st_bbox</span>(north_carolina_2163))</span></code></pre></div>
</div>
</section>
<section id="maps-creation" class="level2">
<h2 class="anchored" data-anchor-id="maps-creation">Maps creation</h2>
<p>The second step is to create both inset and main maps independently. The inset map should show the context (larger area) and highlight the area of interest.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">ggm1 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">ggplot</span>() <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;">geom_sf</span>(<span class="at" style="color: #657422;">data =</span> us_states_2163, <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"white"</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;">geom_sf</span>(<span class="at" style="color: #657422;">data =</span> north_carolina_2163_bb, <span class="at" style="color: #657422;">fill =</span> <span class="cn" style="color: #8f5902;">NA</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">1.2</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;">theme_void</span>()</span>
<span id="cb5-5"></span>
<span id="cb5-6">ggm1</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/ggplot2-inset-maps/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>The main map’s role is to tell the story. Here we show the number of births between 1974 and 1978 in the North Carolina counties (the <code>BIR74</code> variable) using the Mint color palette from the <strong>rcartocolor</strong> palette. We also customize the legend position and size - this way, the legend is a part of the map, instead of being somewhere outside the map frame.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">ggm2 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">ggplot</span>() <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;">geom_sf</span>(<span class="at" style="color: #657422;">data =</span> north_carolina_2163, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">fill =</span> BIR74)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;">scale_fill_carto_c</span>(<span class="at" style="color: #657422;">palette =</span> <span class="st" style="color: #20794D;">"Mint"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;">theme_void</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="fl" style="color: #AD0000;">0.4</span>, <span class="fl" style="color: #AD0000;">0.05</span>),</span>
<span id="cb6-6">        <span class="at" style="color: #657422;">legend.direction =</span> <span class="st" style="color: #20794D;">"horizontal"</span>,</span>
<span id="cb6-7">        <span class="at" style="color: #657422;">legend.key.width =</span> <span class="fu" style="color: #4758AB;">unit</span>(<span class="dv" style="color: #AD0000;">10</span>, <span class="st" style="color: #20794D;">"mm"</span>))</span>
<span id="cb6-8"></span>
<span id="cb6-9">ggm2</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/ggplot2-inset-maps/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="maps-joining" class="level2">
<h2 class="anchored" data-anchor-id="maps-joining">Maps joining</h2>
<p>The final step is to join two maps. This can be done using functions from the <strong>cowplot</strong> package. We create an empty ggplot layer using <code>ggdraw()</code>, fill it with out main map (<code>draw_plot(ggm2)</code>), and add an inset map by specifing its position and size:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">gg_inset_map1 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">ggdraw</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;">draw_plot</span>(ggm2) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;">draw_plot</span>(ggm1, <span class="at" style="color: #657422;">x =</span> <span class="fl" style="color: #AD0000;">0.05</span>, <span class="at" style="color: #657422;">y =</span> <span class="fl" style="color: #AD0000;">0.65</span>, <span class="at" style="color: #657422;">width =</span> <span class="fl" style="color: #AD0000;">0.3</span>, <span class="at" style="color: #657422;">height =</span> <span class="fl" style="color: #AD0000;">0.3</span>)</span>
<span id="cb7-4"></span>
<span id="cb7-5">gg_inset_map1</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/ggplot2-inset-maps/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>The final map can be saved using the <code>ggsave()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">ggsave</span>(<span class="at" style="color: #657422;">filename =</span> <span class="st" style="color: #20794D;">"01_gg_inset_map.png"</span>, </span>
<span id="cb8-2">       <span class="at" style="color: #657422;">plot =</span> gg_inset_map1,</span>
<span id="cb8-3">       <span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">8</span>, </span>
<span id="cb8-4">       <span class="at" style="color: #657422;">height =</span> <span class="dv" style="color: #AD0000;">4</span>,</span>
<span id="cb8-5">       <span class="at" style="color: #657422;">dpi =</span> <span class="dv" style="color: #AD0000;">150</span>)</span></code></pre></div>
</div>
</section>
</section>
<section id="advanced-inset-map" class="level1">
<h1>Advanced inset map</h1>
<p>Let’s expand the idea of the inset map in <strong>ggplot2</strong> based on the previous example.</p>
<section id="data-preparation-1" class="level2">
<h2 class="anchored" data-anchor-id="data-preparation-1">Data preparation</h2>
<p>This map will use the US states borders (<code>states()</code>) as the source of the inset map and the Kentucky Senate legislative districts (<code>state_legislative_districts()</code>) as the main map.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">library</span>(tigris)</span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;">options</span>(<span class="at" style="color: #657422;">tigris_use_cache =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb9-3">us_states <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">states</span>(<span class="at" style="color: #657422;">cb =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">class =</span> <span class="st" style="color: #20794D;">"sf"</span>)</span>
<span id="cb9-4">ky_districts <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">state_legislative_districts</span>(<span class="st" style="color: #20794D;">"KY"</span>, <span class="at" style="color: #657422;">house =</span> <span class="st" style="color: #20794D;">"upper"</span>,</span>
<span id="cb9-5">                                           <span class="at" style="color: #657422;">cb =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">class =</span> <span class="st" style="color: #20794D;">"sf"</span>)</span></code></pre></div>
</div>
<p>The <code>states()</code> function, in addition to the 50 states, also returns the District of Columbia, Puerto Rico, American Samoa, the Commonwealth of the Northern Mariana Islands, Guam, and the US Virgin Islands. For our purpose, we are interested in the continental 48 states and the District of Columbia only; therefore, we remove the rest of the divisions using <code>subset()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">us_states <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">subset</span>(us_states, </span>
<span id="cb10-2">                   <span class="sc" style="color: #5E5E5E;">!</span>NAME <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="fu" style="color: #4758AB;">c</span>(</span>
<span id="cb10-3">                     <span class="st" style="color: #20794D;">"United States Virgin Islands"</span>,</span>
<span id="cb10-4">                     <span class="st" style="color: #20794D;">"Commonwealth of the Northern Mariana Islands"</span>,</span>
<span id="cb10-5">                     <span class="st" style="color: #20794D;">"Guam"</span>,</span>
<span id="cb10-6">                     <span class="st" style="color: #20794D;">"American Samoa"</span>,</span>
<span id="cb10-7">                     <span class="st" style="color: #20794D;">"Puerto Rico"</span>,</span>
<span id="cb10-8">                     <span class="st" style="color: #20794D;">"Alaska"</span>,</span>
<span id="cb10-9">                     <span class="st" style="color: #20794D;">"Hawaii"</span></span>
<span id="cb10-10">                   ))</span></code></pre></div>
</div>
<p>The same as in the example above, we transform both objects to have the same projection.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">ky_districts_2163 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_transform</span>(ky_districts, <span class="at" style="color: #657422;">crs =</span> <span class="dv" style="color: #AD0000;">2163</span>)</span>
<span id="cb11-2">us_states_2163 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_transform</span>(us_states, <span class="at" style="color: #657422;">crs =</span> <span class="dv" style="color: #AD0000;">2163</span>)</span></code></pre></div>
</div>
<p>We also extract the bounding box of the main object here. However, instead of using it directly, we add a buffer of 10,000 meters around it. This output will be handy in both inset and main maps.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">ky_districts_2163_bb <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_as_sfc</span>(<span class="fu" style="color: #4758AB;">st_bbox</span>(ky_districts_2163))</span>
<span id="cb12-2">ky_districts_2163_bb <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_buffer</span>(ky_districts_2163_bb, <span class="at" style="color: #657422;">dist =</span> <span class="dv" style="color: #AD0000;">10000</span>)</span></code></pre></div>
</div>
<p>The <code>ky_districts_2163</code> object does not have any interesting variables to visualize, so we create some random values here. However, we could also join the districts’ data with another dataset in this step.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">ky_districts_2163<span class="sc" style="color: #5E5E5E;">$</span>values <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">runif</span>(<span class="fu" style="color: #4758AB;">nrow</span>(ky_districts_2163))</span></code></pre></div>
</div>
</section>
<section id="map-creation" class="level2">
<h2 class="anchored" data-anchor-id="map-creation">Map creation</h2>
<p>The inset map should be as clear and simple as possible.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">ggm3 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">ggplot</span>() <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;">geom_sf</span>(<span class="at" style="color: #657422;">data =</span> us_states_2163, <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"white"</span>, <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">0.2</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;">geom_sf</span>(<span class="at" style="color: #657422;">data =</span> ky_districts_2163_bb, <span class="at" style="color: #657422;">fill =</span> <span class="cn" style="color: #8f5902;">NA</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">1.2</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;">theme_void</span>()</span>
<span id="cb14-5"></span>
<span id="cb14-6">ggm3</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/ggplot2-inset-maps/index_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>On the other hand, the main map looks better when we provide some additional context to our data. One of the ways to achieve it is to add the borders of the neighboring states.</p>
<p>Importantly, we also need to limit the extent of our main map to the range of the frame in the inset map. This can be done with the <code>coord_sf()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">ggm4 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">ggplot</span>() <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;">geom_sf</span>(<span class="at" style="color: #657422;">data =</span> us_states_2163, <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"#F5F5DC"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;">geom_sf</span>(<span class="at" style="color: #657422;">data =</span> ky_districts_2163, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">fill =</span> values)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-4">  <span class="fu" style="color: #4758AB;">scale_fill_carto_c</span>(<span class="at" style="color: #657422;">palette =</span> <span class="st" style="color: #20794D;">"Sunset"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-5">  <span class="fu" style="color: #4758AB;">theme_void</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-6">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="fl" style="color: #AD0000;">0.5</span>, <span class="fl" style="color: #AD0000;">0.07</span>),</span>
<span id="cb15-7">        <span class="at" style="color: #657422;">legend.direction =</span> <span class="st" style="color: #20794D;">"horizontal"</span>,</span>
<span id="cb15-8">        <span class="at" style="color: #657422;">legend.key.width =</span> <span class="fu" style="color: #4758AB;">unit</span>(<span class="dv" style="color: #AD0000;">10</span>, <span class="st" style="color: #20794D;">"mm"</span>),</span>
<span id="cb15-9">        <span class="at" style="color: #657422;">plot.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"#BFD5E3"</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-10">  <span class="fu" style="color: #4758AB;">coord_sf</span>(<span class="at" style="color: #657422;">xlim =</span> <span class="fu" style="color: #4758AB;">st_bbox</span>(ky_districts_2163_bb)[<span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">3</span>)],</span>
<span id="cb15-11">           <span class="at" style="color: #657422;">ylim =</span> <span class="fu" style="color: #4758AB;">st_bbox</span>(ky_districts_2163_bb)[<span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">4</span>)])</span>
<span id="cb15-12"></span>
<span id="cb15-13">ggm4</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/ggplot2-inset-maps/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>Finally, we draw two maps together, trying to find the best location and size for the inset map.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">gg_inset_map2 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">ggdraw</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;">draw_plot</span>(ggm4) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;">draw_plot</span>(ggm3, <span class="at" style="color: #657422;">x =</span> <span class="fl" style="color: #AD0000;">0.02</span>, <span class="at" style="color: #657422;">y =</span> <span class="fl" style="color: #AD0000;">0.65</span>, <span class="at" style="color: #657422;">width =</span> <span class="fl" style="color: #AD0000;">0.35</span>, <span class="at" style="color: #657422;">height =</span> <span class="fl" style="color: #AD0000;">0.35</span>)</span>
<span id="cb16-4"></span>
<span id="cb16-5">gg_inset_map2</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/ggplot2-inset-maps/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>The final map can be saved using the <code>ggsave()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;">ggsave</span>(<span class="at" style="color: #657422;">filename =</span> <span class="st" style="color: #20794D;">"02_gg_inset_map.png"</span>, </span>
<span id="cb17-2">       <span class="at" style="color: #657422;">plot =</span> gg_inset_map2,</span>
<span id="cb17-3">       <span class="at" style="color: #657422;">width =</span> <span class="fl" style="color: #AD0000;">7.05</span>, </span>
<span id="cb17-4">       <span class="at" style="color: #657422;">height =</span> <span class="dv" style="color: #AD0000;">4</span>,</span>
<span id="cb17-5">       <span class="at" style="color: #657422;">dpi =</span> <span class="dv" style="color: #AD0000;">150</span>)</span></code></pre></div>
</div>
</section>
</section>
<section id="summary" class="level1">
<h1>Summary</h1>
<p>The above examples can be adjusted to any spatial data and location. It is also possible to put more context on the map, including adding main cities’ names, neighboring states’ names, and annotations (using <code>geom_text()</code>, <code>geom_label()</code>). The main map can also be enhanced with the north arrow and scale bar using the <a href="https://github.com/oswaldosantos/ggsn"><strong>ggsn</strong></a> package.</p>
<p>As always with R, there are many possible options to create inset maps. You can find two examples of inset maps created using the <strong>tmap</strong> package in <a href="https://geocompr.robinlovelace.net/adv-map.html#inset-maps">the Geocomputation with R book</a>. The second example is a classic map of the United States, which consists of the contiguous United States, Hawaii, and Alaska. However, Hawaii and Alaska are displayed at different geographic scales than the main map there. This problem can also be solved in R, which you can see in <a href="https://nowosad.github.io/post/making-alternative-inset-maps-of-the-usa/">the Making maps of the USA with R: alternative layout</a> blogpost and the <a href="https://github.com/Nowosad/us-map-alternative-layout">Alternative layout for maps of the United States</a> repository.</p>
<p>The presented approaches also apply to other areas. For example, you can find three ways on how to create an inset map of Spain in the <a href="https://github.com/Nowosad/spain-map-layout">Alternative layout for maps of Spain</a> repository. Other examples of inset maps with <strong>ggplot2</strong> can be found in the <a href="https://ryanpeek.github.io/mapping-in-R-workshop/vig_making_inset_maps.html">Inset Maps</a> vignette by <a href="https://twitter.com/riverpeek">Ryan Peek</a> and the blog post <a href="https://www.r-spatial.org/r/2018/10/25/ggplot2-sf-3.html">Drawing beautiful maps programmatically with R, sf and ggplot2</a> by <a href="https://twitter.com/melimore86">Mel Moreno</a> and <a href="https://twitter.com/MabLabUF">Mathieu Basille</a>.</p>
<p>The decision which option to use depends on the expected map type preferred R packages, etc. Try different approaches on your own data and decide what works best for you!</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{nowosad2019,
  author = {Jakub Nowosad},
  title = {Inset Maps with Ggplot2},
  date = {2019-12-08},
  url = {https://geocompx.org//post/2019/ggplot2-inset-maps},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-nowosad2019" class="csl-entry quarto-appendix-citeas">
Jakub Nowosad. 2019. <span>“Inset Maps with Ggplot2.”</span> December 8,
2019. <a href="https://geocompx.org//post/2019/ggplot2-inset-maps">https://geocompx.org//post/2019/ggplot2-inset-maps</a>.
</div></div></section></div> ]]></description>
  <category>vignette</category>
  <category>rstats</category>
  <guid>https://geocompx.org/post/2019/ggplot2-inset-maps/index.html</guid>
  <pubDate>Sat, 07 Dec 2019 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Map coloring: the color scale styles available in the tmap package</title>
  <dc:creator>Jakub Nowosad</dc:creator>
  <link>https://geocompx.org/post/2019/tmap-styles/index.html</link>
  <description><![CDATA[ 



<p>This vignette builds on the <a href="https://geocompr.robinlovelace.net/adv-map.html">making maps chapter</a> of <a href="https://geocompr.github.io/">the Geocomputation with R book</a>. Its goal is to demonstrate all possible map styles available in the <strong>tmap</strong> package.</p>
<section id="prerequisites" class="level2 unnumbered">
<h2 class="unnumbered anchored" data-anchor-id="prerequisites">Prerequisites</h2>
<p>The examples below assume the following packages are attached:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(spData) <span class="co" style="color: #5E5E5E;"># example datasets</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(tmap)   <span class="co" style="color: #5E5E5E;"># map creation</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(sf)     <span class="co" style="color: #5E5E5E;"># spatial data reprojection</span></span></code></pre></div>
</div>
<p>The <code>world</code> object containing a world map data from <a href="https://www.naturalearthdata.com/">Natural Earth</a> and information about countries’ names, regions, and subregions they belong to, areas, life expectancies, and populations. This object is in geographical coordinates using the WGS84 datum, however, for mapping purposes, the Mollweide projection is a better alternative (learn more in <a href="https://geocompr.robinlovelace.net/reproj-geo-data.html#modifying-map-projections">the modifying map projections section</a>). The <code>st_tranform</code> function from the <strong>sf</strong> package allows for quick reprojection to the selected coordinate reference system (e.g., <code>"+proj=moll"</code> represents the Mollweide projection).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">world_moll <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_transform</span>(world, <span class="at" style="color: #657422;">crs =</span> <span class="st" style="color: #20794D;">"+proj=moll"</span>)</span></code></pre></div>
</div>
</section>
<section id="one-color" class="level1">
<h1>One color</h1>
<p>Let’s start with the basics. To create a simple world map, we need to specify the data object (<code>world_moll</code>) inside the <code>tm_shape()</code> function, and the way we want to visualize it. The <strong>tmap</strong> package offers several visualisation possibilities for polygons, including <code>tm_borders()</code>, <code>tm_fill()</code>, and <code>tm_polygons()</code>. The last one draws the filled polygons with borders, where the fill color can be specified with the <code>col</code> argument:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lightblue"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>The output is a map of world countries, where each country is filled with a light blue color.</p>
</section>
<section id="coloring-of-adjacent-polygons" class="level1">
<h1>Coloring of adjacent polygons</h1>
<p>The <code>col</code> argument is very flexible, and its action depends on the value provided. In the previous example, we provided a single color value resulting in a map with one color. To create a map, where adjacent polygons do not get the same color, we need to provide a keyword <code>"MAP_COLORS"</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"MAP_COLORS"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>The default color can be changed using the <code>palette</code> argument - run the <code>tmaptools::palette_explorer()</code> function to see possible palettes’ names.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"MAP_COLORS"</span>,</span>
<span id="cb5-3">              <span class="at" style="color: #657422;">palette =</span> <span class="st" style="color: #20794D;">"Pastel1"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<!-- Additionally, the number of classes can be set using the `n` argument. -->
<p>Additionally, in this case, it is possible to use the <code>minimize</code> argument, which triggers the internal algorithm to search for a minimal number of colors for visualization.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"MAP_COLORS"</span>,</span>
<span id="cb6-3">              <span class="at" style="color: #657422;">minimize =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>The new map uses five colors<!-- except for Angola (blue color)-->. On a side note, in theory, no more than four colors are required to color the polygons of the map so that no two adjacent polygons have the same color (learn more about the four color map theorem on <a href="https://en.wikipedia.org/wiki/Four_color_theorem">Wikipedia</a>).</p>
</section>
<section id="categorical-maps" class="level1">
<h1>Categorical maps</h1>
<p>The third use of the <code>col</code> argument is by providing the variable (column) name. In this case, the map will represent the given variable. By default, <strong>tmap</strong> behaves differently depending on the input variable type. For example, it will create a categorical map when the provided variable contains characters or factors. The <code>tm_polygons(col = "subregion", style = "cat")</code> code will be run automatically in this case.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"subregion"</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="discrete-maps" class="level1">
<h1>Discrete maps</h1>
<p>Discrete maps represents continuous numerical variables using discrete class intervals. There are several ways to convert continuous variables to discrete ones implemented in <strong>tmap</strong>.</p>
<section id="pretty" class="level2">
<h2 class="anchored" data-anchor-id="pretty">Pretty</h2>
<p>When the variable provided as the <code>col</code> argument is numeric, <strong>tmap</strong> will use the <code>"pretty"</code> style as a default. In other words, it runs <code>tm_polygons(col = "lifeExp", style = "pretty")</code> invisibly to the user. This style rounds breaks into whole numbers where possible and spaces them evenly.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lifeExp"</span>,</span>
<span id="cb8-3">              <span class="at" style="color: #657422;">legend.hist =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>A histogram is added using <code>legend.hist = TRUE</code> in this and several next examples to show how the selected map style relates to the distribution of values.</p>
<p>It is possible to indicate a preferred number of classes using the <code>n</code> argument. Importantly, not every <code>n</code> is possible depending on the range of the values in the data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lifeExp"</span>,</span>
<span id="cb9-3">              <span class="at" style="color: #657422;">legend.hist =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb9-4">              <span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">4</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="fixed" class="level2">
<h2 class="anchored" data-anchor-id="fixed">Fixed</h2>
<p>The <code>"fixed"</code> style allows for a manual selection of the breaks in conjunction with the <code>breaks</code> argument.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lifeExp"</span>, </span>
<span id="cb10-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"fixed"</span>,</span>
<span id="cb10-4">              <span class="at" style="color: #657422;">breaks =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">45</span>, <span class="dv" style="color: #AD0000;">60</span>, <span class="dv" style="color: #AD0000;">75</span>, <span class="dv" style="color: #AD0000;">90</span>),</span>
<span id="cb10-5">              <span class="at" style="color: #657422;">legend.hist =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>Additionally, the default labels can be overwritten using the <code>labels</code> argument.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lifeExp"</span>, </span>
<span id="cb11-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"fixed"</span>,</span>
<span id="cb11-4">              <span class="at" style="color: #657422;">breaks =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">45</span>, <span class="dv" style="color: #AD0000;">60</span>, <span class="dv" style="color: #AD0000;">75</span>, <span class="dv" style="color: #AD0000;">90</span>),</span>
<span id="cb11-5">              <span class="at" style="color: #657422;">labels =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"low"</span>, <span class="st" style="color: #20794D;">"medium"</span>, <span class="st" style="color: #20794D;">"high"</span>),</span>
<span id="cb11-6">              <span class="at" style="color: #657422;">legend.hist =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="breaks-based-on-the-standard-deviation-value" class="level2">
<h2 class="anchored" data-anchor-id="breaks-based-on-the-standard-deviation-value">Breaks based on the standard deviation value</h2>
<p>The <code>"sd"</code> style calculates a standard deviation of a given variable, and next use this value as the break width.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lifeExp"</span>, </span>
<span id="cb12-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"sd"</span>,</span>
<span id="cb12-4">              <span class="at" style="color: #657422;">legend.hist =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="fisher-algorithm" class="level2">
<h2 class="anchored" data-anchor-id="fisher-algorithm">Fisher algorithm</h2>
<p>The <code>"fisher"</code> style creates groups with maximalized homogeneity.<sup>1</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lifeExp"</span>,</span>
<span id="cb13-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"fisher"</span>,</span>
<span id="cb13-4">              <span class="at" style="color: #657422;">legend.hist =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="jenks-natural-breaks" class="level2">
<h2 class="anchored" data-anchor-id="jenks-natural-breaks">Jenks natural breaks</h2>
<p>The <code>"jenks"</code> style identifies groups of similar values in the data and maximizes the differences between categories.<sup>2</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lifeExp"</span>,</span>
<span id="cb14-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"jenks"</span>,</span>
<span id="cb14-4">              <span class="at" style="color: #657422;">legend.hist =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-5">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="hierarchical-clustering" class="level2">
<h2 class="anchored" data-anchor-id="hierarchical-clustering">Hierarchical clustering</h2>
<p>In the <code>"hclust"</code> style, breaks are created using hierarchical clustering.<sup>3</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lifeExp"</span>,</span>
<span id="cb15-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"hclust"</span>,</span>
<span id="cb15-4">              <span class="at" style="color: #657422;">legend.hist =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-5">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="bagged-clustering" class="level2">
<h2 class="anchored" data-anchor-id="bagged-clustering">Bagged clustering</h2>
<p>The <code>"bclust"</code> style uses the <code>bclust</code> function to generate the breaks using bagged clustering.<sup>4</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lifeExp"</span>,</span>
<span id="cb16-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"bclust"</span>,</span>
<span id="cb16-4">              <span class="at" style="color: #657422;">legend.hist =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid" width="768"></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Committee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)
Computing Hierarchical Clustering</code></pre>
</div>
</div>
</section>
<section id="k-means-clustering" class="level2">
<h2 class="anchored" data-anchor-id="k-means-clustering">k-means clustering</h2>
<p>The <code>"kmeans"</code> style uses the <code>kmeans</code> function to generate the breaks.<sup>5</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb18-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lifeExp"</span>, </span>
<span id="cb18-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"kmeans"</span>,</span>
<span id="cb18-4">              <span class="at" style="color: #657422;">legend.hist =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb18-5">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="quantile-breaks" class="level2">
<h2 class="anchored" data-anchor-id="quantile-breaks">Quantile breaks</h2>
<p>The <code>"quantile"</code> style creates breaks with an equal number of features (polygons).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lifeExp"</span>, </span>
<span id="cb19-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"quantile"</span>,</span>
<span id="cb19-4">              <span class="at" style="color: #657422;">legend.hist =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-5">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="equal-breaks" class="level2">
<h2 class="anchored" data-anchor-id="equal-breaks">Equal breaks</h2>
<p>The <code>"equal"</code> style divides input values into bins of equal range and is appropriate for variables with a uniform distribution. It is not recommended for variables with a skewed distribution as the resulting map may end-up having little color diversity.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lifeExp"</span>, </span>
<span id="cb20-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"equal"</span>,</span>
<span id="cb20-4">              <span class="at" style="color: #657422;">legend.hist =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb20-5">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-19-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>Learn more about the implementation of discrete scales in <a href="https://r-spatial.github.io/classInt/index.html">the <strong>classInt</strong> package’s documentation</a>.</p>
</section>
</section>
<section id="continuous-maps" class="level1">
<h1>Continuous maps</h1>
<p>The <strong>tmap</strong> package also allows for creating continuous maps.</p>
<section id="continuous" class="level2">
<h2 class="anchored" data-anchor-id="continuous">Continuous</h2>
<p>The <code>"cont"</code> style presents a large number of colors over the continuous color field.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lifeExp"</span>,</span>
<span id="cb21-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"cont"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb21-4">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="order" class="level2">
<h2 class="anchored" data-anchor-id="order">Order</h2>
<p>The <code>"order"</code> style also presents a large number of colors over the continuous color field. However, this style is suited to visualize skewed distributions; notice that the values on the legend do not change linearly.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"lifeExp"</span>,</span>
<span id="cb22-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"order"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb22-4">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-21-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
</section>
<section id="logarithmic-scales" class="level1">
<h1>Logarithmic scales</h1>
<p>The default numeric style, <code>pretty</code>, is easy to understand, but it is not proper for maps of variables with skewed distributions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb23-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"pop"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb23-3">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>Another possible style, <code>order</code> works better in this case; however, it is not easy to interpret.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb24-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"pop"</span>, </span>
<span id="cb24-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"order"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb24-4">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-23-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>A better alternative, in this case, is to use a common logarithm (the logarithm to base 10) scale. The <strong>tmap</strong> package gives two possibilities in this case - <code>"log10_pretty"</code> and <code>"log10"</code>. The <code>"log10_pretty"</code> style is a common logarithmic version of the regular <code>pretty</code> style.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb25-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"pop"</span>, </span>
<span id="cb25-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"log10_pretty"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb25-4">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-24-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>On the other hand, the <code>"log10"</code> style is a version of a continuous scale.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world_moll) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb26-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"pop"</span>, </span>
<span id="cb26-3">              <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"log10"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb26-4">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">legend.outside =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-styles/index_files/figure-html/unnamed-chunk-25-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="conclusions" class="level1">
<h1>Conclusions</h1>
<p>Selecting a color scale style is not an easy task. It depends on the type of input variable and its distribution, but also the intended audience. Therefore, it is worth to spend some time and think about your readers (e.g., would they be able to understand the logarithmic scale or should you use the manual breaks instead?) and your data (e.g., how many breaks should there be to show different subgroups?). Now you know different color scale styles implemented in <strong>tmap</strong>, so let’s try using them for your own projects!</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>https://www.tandfonline.com/doi/abs/10.1080/01621459.1958.10501479↩︎</p></li>
<li id="fn2"><p>https://en.wikipedia.org/wiki/Jenks_natural_breaks_optimization↩︎</p></li>
<li id="fn3"><p>See the <code>?hclust</code> documentation for more details.↩︎</p></li>
<li id="fn4"><p>See the <code>?bclust</code> documentation for more details.↩︎</p></li>
<li id="fn5"><p>See the <code>?kmeans</code> documentation for more details.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{nowosad2019,
  author = {Jakub Nowosad},
  title = {Map Coloring: The Color Scale Styles Available in the Tmap
    Package},
  date = {2019-10-17},
  url = {https://geocompx.org//post/2019/tmap-styles},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-nowosad2019" class="csl-entry quarto-appendix-citeas">
Jakub Nowosad. 2019. <span>“Map Coloring: The Color Scale Styles
Available in the Tmap Package.”</span> October 17, 2019. <a href="https://geocompx.org//post/2019/tmap-styles">https://geocompx.org//post/2019/tmap-styles</a>.
</div></div></section></div> ]]></description>
  <category>vignette</category>
  <category>rstats</category>
  <guid>https://geocompx.org/post/2019/tmap-styles/index.html</guid>
  <pubDate>Wed, 16 Oct 2019 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Grids and graticules in the tmap package</title>
  <dc:creator>Jakub Nowosad</dc:creator>
  <link>https://geocompx.org/post/2019/tmap-grid/index.html</link>
  <description><![CDATA[ 



<p>This vignette builds on the <a href="https://geocompr.robinlovelace.net/adv-map.html">making maps chapter</a> of <a href="https://geocompr.github.io/">the Geocomputation with R book</a>. Its goal is to demonstrate how to set and modify grids and graticules in the <strong>tmap</strong> package.</p>
<section id="prerequisites" class="level2 unnumbered">
<h2 class="unnumbered anchored" data-anchor-id="prerequisites">Prerequisites</h2>
<p>The examples below assume the following packages are attached:</p>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(spData) <span class="co" style="color: #5E5E5E;"># example datasets</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(tmap)   <span class="co" style="color: #5E5E5E;"># map creation (&gt;=2.3)</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(sf)     <span class="co" style="color: #5E5E5E;"># spatial data classes</span></span></code></pre></div>
</div>
</section>
<section id="grids-and-graticules" class="level1">
<h1>Grids and graticules</h1>
<p>The <strong>tmap</strong> package offers two ways to draws coordinate lines - <code>tm_grid()</code> and <code>tm_graticules()</code>. The role of <code>tm_grid()</code> is to represent the input data’s coordinates. For example, the <code>nz</code> object uses the New Zealand Transverse Mercator projection, with meters as its units.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(nz) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;">tm_grid</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-grid/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="576"></p>
</div>
</div>
<p><code>tm_graticules()</code> shows longitude lines (meridians) and latitude lines (parallels), with degrees as units (note the degree sign in the example below).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(nz) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;">tm_polygons</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;">tm_graticules</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-grid/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="576"></p>
</div>
</div>
</section>
<section id="layers-order" class="level1">
<h1>Layers order</h1>
<p>Both, <code>tm_grid()</code> and <code>tm_graticules()</code> could be placed above or below the main spatial data. Its position on the map depends on its place in the code. When <code>tm_grid()</code> or <code>tm_graticules()</code> are placed after the code drawing geometry (e.g.&nbsp;<code>tm_polygons()</code>), the grids or graticules are ploted on the top of the map. On the other hand, when <code>tm_grid()</code> or <code>tm_graticules()</code> are placed before the code drawing geometry (e.g.&nbsp;<code>tm_polygons()</code>), the grids or graticules are plotted behind the spatial data.</p>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(nz) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">tm_graticules</span>() <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;">tm_polygons</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-grid/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="576"></p>
</div>
</div>
</section>
<section id="customization" class="level1">
<h1>Customization</h1>
<p>Grids and graticules can be easily customized in <strong>tmap</strong> using several arguments. The first one, <code>labels.inside.frame</code> moves the labels inside the map grid (it is set to <code>FALSE</code> as the default).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(nz) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;">tm_grid</span>(<span class="at" style="color: #657422;">labels.inside.frame =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;">tm_polygons</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-grid/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="576"></p>
</div>
</div>
<p>The number of horizontal (<code>x</code>) and vertical (<code>y</code>) lines can be set using the <code>n.x</code> and <code>n.y</code> arguments. Importantly, <strong>tmap</strong> rounds coordinate values to equally spaced “round” values, so the number of actual labels may be slightly different than set with <code>n.x</code> and <code>n.y</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(nz) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;">tm_grid</span>(<span class="at" style="color: #657422;">n.x =</span> <span class="dv" style="color: #AD0000;">4</span>, <span class="at" style="color: #657422;">n.y =</span> <span class="dv" style="color: #AD0000;">3</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;">tm_polygons</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-grid/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="576"></p>
</div>
</div>
<p>By default, <code>tm_grid()</code> and <code>tm_graticules()</code> shows ticks and lines. They can be disabled using <code>ticks = FALSE</code> and <code>lines = FALSE</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(nz) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;">tm_grid</span>(<span class="at" style="color: #657422;">ticks =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;">tm_polygons</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-grid/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="576"></p>
</div>
</div>
<p>Especially, <code>lines = FALSE</code> could be useful when presenting raster data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(nz) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;">tm_grid</span>(<span class="at" style="color: #657422;">lines =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;">tm_polygons</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-grid/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="576"></p>
</div>
</div>
<p>It is also possible to customize <code>tm_grid()</code> and <code>tm_graticules()</code> apperance, for example by chaning the lines colors (<code>col</code>), width (<code>lwd</code>) or labels size (<code>labels.size</code>).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(nz) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;">tm_grid</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">lwd =</span> <span class="dv" style="color: #AD0000;">3</span>, <span class="at" style="color: #657422;">labels.size =</span> <span class="fl" style="color: #AD0000;">0.4</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;">tm_polygons</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-grid/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="576"></p>
</div>
</div>
<p>The above examples uses <code>tm_grid()</code>, but the same arguments apply to the <code>tm_graticules()</code>.</p>
</section>
<section id="layout-settings" class="level1">
<h1>Layout settings</h1>
<p>By default, <strong>tmap</strong> adds small inner margins between the presented data and the map frame. It works well in many cases, for example, see the map of New Zealand above. However, it does not look perfect for world maps.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;">tm_graticules</span>() <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;">tm_polygons</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-grid/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="576"></p>
</div>
</div>
<p>The way to fix this is to use the <code>tm_layout()</code> function and set its <code>inner.margins</code> argument to <code>0</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;">tm_shape</span>(world) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;">tm_graticules</span>() <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;">tm_polygons</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;">tm_layout</span>(<span class="at" style="color: #657422;">inner.margins =</span> <span class="dv" style="color: #AD0000;">0</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/tmap-grid/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="576"></p>
</div>
</div>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{nowosad2019,
  author = {Jakub Nowosad},
  title = {Grids and Graticules in the Tmap Package},
  date = {2019-09-04},
  url = {https://geocompx.org//post/2019/tmap-grid},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-nowosad2019" class="csl-entry quarto-appendix-citeas">
Jakub Nowosad. 2019. <span>“Grids and Graticules in the Tmap
Package.”</span> September 4, 2019. <a href="https://geocompx.org//post/2019/tmap-grid">https://geocompx.org//post/2019/tmap-grid</a>.
</div></div></section></div> ]]></description>
  <category>vignette</category>
  <category>rstats</category>
  <guid>https://geocompx.org/post/2019/tmap-grid/index.html</guid>
  <pubDate>Tue, 03 Sep 2019 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Geographic projections and transformations</title>
  <dc:creator>Robin Lovelace</dc:creator>
  <link>https://geocompx.org/post/2019/crs-projections-transformations/index.html</link>
  <description><![CDATA[ 



<div class="cell">

</div>
<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>This workbook outlines key concepts and functions related to map projections — also referred to as coordinate reference systems (CRSs) — and transformation of geographic data from one projection to another. It is based on the open source book <a href="https://geocompr.robinlovelace.net"><em>Geocomputation with R</em></a>, and Chapter <a href="https://geocompr.robinlovelace.net/reproj-geo-data.html">6</a> in particular.</p>
<p>It was developed for the ‘<a href="https://bonnie-buyuklieva.github.io/SS_ASM19/">CASA Summer School</a>’, or the Doctoral Summer School for Advanced Spatial Modelling: Skills Workshop and Hackathon, 21<sup>st</sup> to 23<sup>rd</sup> August 2019, for its full name! It should be of use to anyone interested in projections, beyond the summer school, so we posted it on our newly updated <a href="https://geocompr.github.io/">website</a> for maximum benefit.</p>
</section>
<section id="prerequisites" class="level1 unnumbered">
<h1 class="unnumbered">Prerequisites</h1>
<p>Before you get started, make sure you have the packages installed:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(sf)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(spData)</span></code></pre></div>
</div>
</section>
<section id="introduction-1" class="level1">
<h1>Introduction</h1>
<p>Before we get started, why use R for geographic data?</p>
<p>Simple answer: because it works, excels at spatial statistics and visualisation and has a huge user community.</p>
<p>It can be used for a wide range of things such as:</p>
<ul>
<li>Book on Geocomputation: https://geocompr.robinlovelace.net/</li>
<li>Propensity to Cycle Tool: https://pct.bike/</li>
</ul>
<p>Geographic data relies on a frame of reference. There are two main types of CRS:</p>
<ul>
<li><strong>Geographic</strong>, where the frame of reference is the globe and how many degrees north or east from the position (0, 0) you are</li>
<li><strong>Projected</strong>, where the frame of reference is a flat representation of part of the Earth’s surface</li>
</ul>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/https:/geocompr.robinlovelace.net/figures/vector_lonlat.png" class="img-fluid figure-img" style="width:49.0%"></p>
<p></p><figcaption class="figure-caption">Illustration of vector (point) data in which location of London (the red X) is represented with reference to an origin (the blue circle). The left plot represents a geographic CRS with an origin at 0° longitude and latitude. The right plot represents a projected CRS with an origin located in the sea west of the South West Peninsula.</figcaption><p></p>
</figure>
</div>
</div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/https:/geocompr.robinlovelace.net/figures/vector_projected.png" class="img-fluid figure-img" style="width:49.0%"></p>
<p></p><figcaption class="figure-caption">Illustration of vector (point) data in which location of London (the red X) is represented with reference to an origin (the blue circle). The left plot represents a geographic CRS with an origin at 0° longitude and latitude. The right plot represents a projected CRS with an origin located in the sea west of the South West Peninsula.</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="tldr" class="level1">
<h1>TLDR</h1>
<p>The ‘too long didn’t read’ (TLDR) take away messages from this text are:</p>
<ul>
<li><strong>Be aware of projections</strong></li>
<li><strong>Decide an appropriate CRS for your project and ensure everything is in that CRS</strong></li>
<li><strong>Use a projected CRS when doing geometric operations</strong></li>
<li><strong>EPSG codes such as 27700 and 4326 refer to specific coordinate systems</strong></li>
<li><strong>It is worth checking if there is an officially supported projection for the region — that is often a good option</strong></li>
</ul>
<p>In R, you can check, set and transform CRS with <code>st_crs()</code> and <code>st_transform()</code> as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">zones_london <span class="ot" style="color: #003B4F;">=</span> lnd</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">st_crs</span>(zones_london)                                         <span class="co" style="color: #5E5E5E;"># find out the CRS</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;">#&gt; Coordinate Reference System:</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;">#&gt;   User input: EPSG:4326 </span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;">#&gt;   wkt:</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;">#&gt; GEOGCS["WGS 84",</span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;">#&gt;     DATUM["WGS_1984",</span></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;">#&gt;         SPHEROID["WGS 84",6378137,298.257223563,</span></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;">#&gt;             AUTHORITY["EPSG","7030"]],</span></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;">#&gt;         AUTHORITY["EPSG","6326"]],</span></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;">#&gt;     PRIMEM["Greenwich",0,</span></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;">#&gt;         AUTHORITY["EPSG","8901"]],</span></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;">#&gt;     UNIT["degree",0.0174532925199433,</span></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;">#&gt;         AUTHORITY["EPSG","9122"]],</span></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;">#&gt;     AUTHORITY["EPSG","4326"]]</span></span>
<span id="cb2-16">zones_london_projected <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_transform</span>(zones_london, <span class="dv" style="color: #AD0000;">27700</span>)   <span class="co" style="color: #5E5E5E;"># transform CRS</span></span>
<span id="cb2-17"><span class="fu" style="color: #4758AB;">st_crs</span>(zones_london) <span class="ot" style="color: #003B4F;">=</span> <span class="cn" style="color: #8f5902;">NA</span>                                    <span class="co" style="color: #5E5E5E;"># set CRS</span></span>
<span id="cb2-18"><span class="fu" style="color: #4758AB;">st_crs</span>(zones_london) <span class="ot" style="color: #003B4F;">=</span> <span class="dv" style="color: #AD0000;">4326</span>                                  <span class="co" style="color: #5E5E5E;"># set CRS</span></span></code></pre></div>
</div>
<p>If you ignore CRSs, bad things can happen.</p>
</section>
<section id="why-are-projections-needed" class="level1">
<h1>Why are projections needed?</h1>
<p>Without a coordinate system, we have no context:</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Which country is it?</p>
<p>Location on Earth is measured in degrees so, even when axes are equal, maps are highly distorted representations of reality far from the equator:</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Along which axis is the image over-represented?</p>
<p>Even when we compensate for this, the cylindrical projection is misleading:</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>By default, most software (including R) plots data with geographic lon/lat coordinates a cylindrical projection, leading to maps like this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">plot</span>(canada<span class="sc" style="color: #5E5E5E;">$</span>geom)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">plot</span>(world)</span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;">#&gt; Warning: plotting the first 9 out of 10 attributes; use max.plot = 10 to plot</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;">#&gt; all</span></span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-5-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Across the whole world, the results look like this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">st_geometry</span>(world), <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"grey"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>There is no single ‘correct’ CRS that can represent everywhere well: it is physically impossible to ‘peal’ the surface of the Earth onto a flat screen (credit: <a href="https://unsplash.com/@awarnerway">Awar Jahfar</a>):</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/https:/images.unsplash.com/photo-1564509398619-622e40ad5a5e?ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=633&amp;q=80" class="img-fluid"></p>
</div>
</div>
<blockquote class="blockquote">
<p>At best we can comply with two out of three spatial properties (distance, area, direction). Therefore, the task at hand determines which projection to choose. For instance, if we are interested in a density (points per grid cell or inhabitants per grid cell), we should use an equal-area projection.</p>
</blockquote>
<ul>
<li>There is also a fourth property, shape.</li>
</ul>
</section>
<section id="which-projection-to-use" class="level1">
<h1>Which projection to use?</h1>
<p>A range of CRSs is available:</p>
<ul>
<li>A Lambert azimuthal equal-area (<a href="https://en.wikipedia.org/wiki/Lambert_azimuthal_equal-area_projection">LAEA</a>) projection for a custom local projection (set <code>lon_0</code> and <code>lat_0</code> to the center of the study area), which is an equal-area projection at all locations but distorts shapes beyond thousands of kilometers.</li>
<li>Azimuthal equidistant (<a href="https://en.wikipedia.org/wiki/Azimuthal_equidistant_projection">AEQD</a>) projections for a specifically accurate straight-line distance between a point and the center point of the local projection.</li>
<li>Lambert conformal conic (<a href="https://en.wikipedia.org/wiki/Lambert_conformal_conic_projection">LCC</a>) projections for regions covering thousands of kilometers, with the cone set to keep distance and area properties reasonable between the secant lines.</li>
<li>Stereographic (<a href="https://en.wikipedia.org/wiki/Stereographic_projection">STERE</a>) projections for polar regions, but taking care not to rely on area and distance calculations thousands of kilometers from the center.</li>
</ul>
<p>This is how it works in R:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">world_laea1_g <span class="ot" style="color: #003B4F;">=</span> world <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;">st_transform</span>(<span class="st" style="color: #20794D;">"+proj=laea +x_0=0 +y_0=0 +lon_0=0 +lat_0=0"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;">st_geometry</span>()</span>
<span id="cb6-4"><span class="fu" style="color: #4758AB;">plot</span>(world_laea1_g)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">world <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;">st_transform</span>(<span class="st" style="color: #20794D;">"+proj=aeqd +x_0=0 +y_0=0 +lon_0=0 +lat_0=0"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;">st_geometry</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;">plot</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">world <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;">st_transform</span>(<span class="st" style="color: #20794D;">"+proj=moll"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;">st_geometry</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;">plot</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>How to add graticules?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">world <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;">st_transform</span>(<span class="st" style="color: #20794D;">"+proj=moll"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;">st_geometry</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;">plot</span>()</span>
<span id="cb9-5">g <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_graticule</span>(<span class="at" style="color: #657422;">x =</span> world) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;">st_transform</span>(<span class="st" style="color: #20794D;">"+proj=moll"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;">st_geometry</span>()</span>
<span id="cb9-8"><span class="fu" style="color: #4758AB;">plot</span>(g, <span class="at" style="color: #657422;">add =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">canada_centroid <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_coordinates</span>(<span class="fu" style="color: #4758AB;">st_centroid</span>(canada))</span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;">#&gt; Warning in st_centroid.sf(canada): st_centroid assumes attributes are constant</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;">#&gt; over geometries of x</span></span>
<span id="cb10-4">canada_laea_crs <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">paste0</span>(<span class="st" style="color: #20794D;">"+proj=laea +x_0=0 +y_0=0 +lon_0="</span>,</span>
<span id="cb10-5">                         canada_centroid[<span class="dv" style="color: #AD0000;">1</span>],</span>
<span id="cb10-6">                         <span class="st" style="color: #20794D;">" +lat_0="</span>,</span>
<span id="cb10-7">                         canada_centroid[<span class="dv" style="color: #AD0000;">2</span>])</span>
<span id="cb10-8">canada_laea <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_transform</span>(canada, <span class="at" style="color: #657422;">crs =</span> canada_laea_crs)</span>
<span id="cb10-9">world_laea <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_transform</span>(world, <span class="at" style="color: #657422;">crs =</span> canada_laea_crs)</span>
<span id="cb10-10"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">st_geometry</span>(canada_laea))</span>
<span id="cb10-11"><span class="fu" style="color: #4758AB;">plot</span>(world_laea, <span class="at" style="color: #657422;">add =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb10-12"><span class="co" style="color: #5E5E5E;">#&gt; Warning in plot.sf(world_laea, add = TRUE): ignoring all but the first attribute</span></span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">canada_centroid <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_coordinates</span>(<span class="fu" style="color: #4758AB;">st_centroid</span>(canada))</span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;">#&gt; Warning in st_centroid.sf(canada): st_centroid assumes attributes are constant</span></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;">#&gt; over geometries of x</span></span>
<span id="cb11-4">canada_laea_crs <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">paste0</span>(<span class="st" style="color: #20794D;">"+proj=laea +x_0=0 +y_0=0 +lon_0="</span>,</span>
<span id="cb11-5">                         canada_centroid[<span class="dv" style="color: #AD0000;">1</span>],</span>
<span id="cb11-6">                         <span class="st" style="color: #20794D;">" +lat_0="</span>,</span>
<span id="cb11-7">                         canada_centroid[<span class="dv" style="color: #AD0000;">2</span>])</span>
<span id="cb11-8">canada_laea <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_transform</span>(canada, <span class="at" style="color: #657422;">crs =</span> canada_laea_crs)</span>
<span id="cb11-9">world_laea <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_transform</span>(world, <span class="at" style="color: #657422;">crs =</span> canada_laea_crs)</span>
<span id="cb11-10"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">st_geometry</span>(canada_laea))</span>
<span id="cb11-11"><span class="fu" style="color: #4758AB;">plot</span>(world_laea, <span class="at" style="color: #657422;">add =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb11-12"><span class="co" style="color: #5E5E5E;">#&gt; Warning in plot.sf(world_laea, add = TRUE): ignoring all but the first attribute</span></span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="epsg-codes" class="level1">
<h1>EPSG codes</h1>
<p>EPSG codes are standard codes for projections. See them in R with:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">epsg_codes <span class="ot" style="color: #003B4F;">=</span> rgdal<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">make_EPSG</span>()</span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;"># View(epsg_codes) # open in interactive spreadsheet</span></span></code></pre></div>
</div>
<p>In the UK, the EPSG code of official data is <a href="https://epsg.io/27700">27700</a>.</p>
</section>
<section id="geographic-data-in-r" class="level1">
<h1>Geographic data in R</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">london_df <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">data.frame</span>(<span class="at" style="color: #657422;">name =</span> <span class="st" style="color: #20794D;">"london"</span>, <span class="at" style="color: #657422;">population =</span> <span class="fl" style="color: #AD0000;">1e7</span>,</span>
<span id="cb13-2">                       <span class="at" style="color: #657422;">lon =</span> <span class="sc" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.1</span>, <span class="at" style="color: #657422;">lat =</span> <span class="fl" style="color: #AD0000;">51.5</span>)</span>
<span id="cb13-3"><span class="fu" style="color: #4758AB;">class</span>(london_df)</span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;">#&gt; [1] "data.frame"</span></span>
<span id="cb13-5">london <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_as_sf</span>(london_df, <span class="at" style="color: #657422;">coords =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"lon"</span>, <span class="st" style="color: #20794D;">"lat"</span>))</span>
<span id="cb13-6"><span class="fu" style="color: #4758AB;">class</span>(london)</span>
<span id="cb13-7"><span class="co" style="color: #5E5E5E;">#&gt; [1] "sf"         "data.frame"</span></span>
<span id="cb13-8"><span class="fu" style="color: #4758AB;">st_is_longlat</span>(london)</span>
<span id="cb13-9"><span class="co" style="color: #5E5E5E;">#&gt; [1] NA</span></span>
<span id="cb13-10"><span class="fu" style="color: #4758AB;">plot</span>(zones_london_projected<span class="sc" style="color: #5E5E5E;">$</span>geometry)</span>
<span id="cb13-11"><span class="fu" style="color: #4758AB;">plot</span>(london<span class="sc" style="color: #5E5E5E;">$</span>geometry, <span class="at" style="color: #657422;">add =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="at" style="color: #657422;">pch =</span> <span class="dv" style="color: #AD0000;">9</span>) <span class="co" style="color: #5E5E5E;"># not there</span></span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="issues-with-geometric-operations" class="level1">
<h1>Issues with geometric operations</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">london_buff1 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_buffer</span>(london, <span class="fl" style="color: #AD0000;">0.1</span>)</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;">plot</span>(london_buff1)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;">plot</span>(zones_london<span class="sc" style="color: #5E5E5E;">$</span>geometry)</span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;">plot</span>(london_buff1, <span class="at" style="color: #657422;">add =</span> T)</span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;">#&gt; Warning in plot.sf(london_buff1, add = T): ignoring all but the first attribute</span></span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-16-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;">st_crs</span>(london) <span class="ot" style="color: #003B4F;">=</span> <span class="dv" style="color: #AD0000;">4326</span></span>
<span id="cb16-2">london_projected <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_transform</span>(london, <span class="dv" style="color: #AD0000;">27700</span>)</span>
<span id="cb16-3">london_buff2 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_buffer</span>(london_projected, <span class="dv" style="color: #AD0000;">10000</span>)</span>
<span id="cb16-4"><span class="fu" style="color: #4758AB;">st_is_longlat</span>(london_projected)</span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;">#&gt; [1] FALSE</span></span>
<span id="cb16-6"><span class="fu" style="color: #4758AB;">plot</span>(zones_london_projected<span class="sc" style="color: #5E5E5E;">$</span>geometry)</span>
<span id="cb16-7"><span class="fu" style="color: #4758AB;">plot</span>(london_buff2, <span class="at" style="color: #657422;">add =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb16-8"><span class="co" style="color: #5E5E5E;">#&gt; Warning in plot.sf(london_buff2, add = TRUE): ignoring all but the first</span></span>
<span id="cb16-9"><span class="co" style="color: #5E5E5E;">#&gt; attribute</span></span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://geocompx.org/post/2019/crs-projections-transformations/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="further-reading" class="level1">
<h1>Further reading</h1>
<p>If you’re interested in learning more on this, check out <em>Geocomputations with R</em>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://geocompr.robinlovelace.net/"><img src="https://geocompx.org/post/2019/crs-projections-transformations/https:/geocompr.robinlovelace.net/images/cover.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>More specific resources on projections include:</p>
<ul>
<li>Excellent tutorial on coordinate systems on the Manifold website: http://www.manifold.net/doc/mfd9/projections_tutorial.htm</li>
<li>An introduction to vector geographic data in <em>Geocomputation with R</em> (Section <a href="https://geocompr.robinlovelace.net/spatial-class.html#vector-data">2.2</a>)</li>
<li>An introduction to CRSs in R (Section <a href="https://geocompr.robinlovelace.net/spatial-class.html#crs-intro">2.4</a>)</li>
<li>The contents and exercises of Chapter <a href="https://geocompr.robinlovelace.net/reproj-geo-data.html">6</a>, solutions to which you can find at https://geocompr.github.io/geocompkg/articles/index.html</li>
<li>For a fun take on projections, see https://xkcd.com/977/</li>
<li>Chapter in upcoming book on CRSs by Edzer Pebesma and Roger Bivand: https://github.com/edzer/sdsr</li>
</ul>
<p>Check out the questions in the exercises section of Chapter 6 of Geocomputation with R.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{lovelace2019,
  author = {Robin Lovelace},
  title = {Geographic Projections and Transformations},
  date = {2019-08-21},
  url = {https://geocompx.org//post/2019/crs-projections-transformations},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-lovelace2019" class="csl-entry quarto-appendix-citeas">
Robin Lovelace. 2019. <span>“Geographic Projections and
Transformations.”</span> August 21, 2019. <a href="https://geocompx.org//post/2019/crs-projections-transformations">https://geocompx.org//post/2019/crs-projections-transformations</a>.
</div></div></section></div> ]]></description>
  <category>vignette</category>
  <category>rstats</category>
  <guid>https://geocompx.org/post/2019/crs-projections-transformations/index.html</guid>
  <pubDate>Tue, 20 Aug 2019 22:00:00 GMT</pubDate>
  <media:content url="https://geocompr.robinlovelace.net/images/cover.png" medium="image" type="image/png"/>
</item>
</channel>
</rss>
